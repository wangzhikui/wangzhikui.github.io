{"meta":{"title":"王智魁Allen","subtitle":null,"description":null,"author":"王智魁Allen","url":"http://wushuning.com"},"pages":[{"title":"微信公众号javaweb全栈之路","date":"2018-10-18T12:05:08.330Z","updated":"2018-10-18T12:05:08.330Z","comments":false,"path":"about/index.html","permalink":"http://wushuning.com/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-10-18T12:05:08.330Z","updated":"2018-10-18T12:05:08.330Z","comments":false,"path":"categories/index.html","permalink":"http://wushuning.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-10-18T12:05:08.344Z","updated":"2018-10-18T12:05:08.344Z","comments":true,"path":"links/index.html","permalink":"http://wushuning.com/links/index.html","excerpt":"","text":""},{"title":"前端导航","date":"2018-10-18T12:05:08.345Z","updated":"2018-10-18T12:05:08.345Z","comments":false,"path":"nav/index.html","permalink":"http://wushuning.com/nav/index.html","excerpt":"","text":"导航"},{"title":"Repositories","date":"2018-10-18T12:05:08.345Z","updated":"2018-10-18T12:05:08.345Z","comments":false,"path":"repository/index.html","permalink":"http://wushuning.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-10-18T12:05:08.345Z","updated":"2018-10-18T12:05:08.345Z","comments":false,"path":"tags/index.html","permalink":"http://wushuning.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"敏捷开发方法(三) 看板 vs scrum","slug":"敏捷开发方法-3-scrum对比kanban","date":"2018-10-28T16:00:00.000Z","updated":"2018-10-29T06:13:19.342Z","comments":true,"path":"2018/10/29/敏捷开发方法-3-scrum对比kanban/","link":"","permalink":"http://wushuning.com/2018/10/29/敏捷开发方法-3-scrum对比kanban/","excerpt":"","text":"Scrum 与 Kanban 对比&amp;选择","categories":[{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/categories/研发管理/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://wushuning.com/tags/笔记/"},{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/tags/研发管理/"}]},{"title":"敏捷开发方法(二) 看板","slug":"敏捷开发方法-2-kanban","date":"2018-10-28T16:00:00.000Z","updated":"2018-10-29T06:08:34.141Z","comments":true,"path":"2018/10/29/敏捷开发方法-2-kanban/","link":"","permalink":"http://wushuning.com/2018/10/29/敏捷开发方法-2-kanban/","excerpt":"","text":"概念重点关注 关注可视化和管理流程 不依赖迭代，提倡持续连续工作流，使得团队保持专注 核心概念四个主要原则： 从实际开始；专注增量和渐进性改进 尊重现有方法和角色，培养组织各级领导力 六个核心实践： 可视化工作流程 在制品数量（WIP） 工作项流动 明确规则 确保反馈 建立看板可视化工作流 绘制价值流图：依据团队实际流程，可视化全过程，并通过与上下游协作部门达成共识，进行价值流图向上下游的扩展； 设置输入和输出边界：在设计看板系统的时候要尽早对在制品控制的边界做出决策，对受控范围内的自身团队的工作提供透明度； 分割进行中和已完成，添加必要的缓冲区或等待队列：缓冲或等待队列增大了系统的在制品值，他们将导致前置时间拉长；但是缓冲和队列可以使工作流动变得平滑； 可视化工作项： 可视化价值：上图中的每一个卡片代表一个价值项，它们可以是功能特征、技术任务、缺陷、重构、环境相关等等以开发为中心的一切工作类型； 可视化价值流动：任务卡片所在的列，表示其所处的阶段，价值流是价值项从左至右的流动过程，是信息的产出过程，也是价值增加的过程； 可视化问题及阻碍：价值流动可能会被阻碍，标识阻碍因素（例如用红色卡片对问题和阻碍因素可视化）并推动其解决，促进价值流动； 可视化队列/瓶颈：最终限制系统端到端流量的是系统瓶颈处的流量，必须从解决瓶颈问题开始； 显示化规则团队看板系统建立之初，一项有价值的实践必不可少，显示化团队工作的规范，规则。显示化流程规则，是指明确定义和沟通团队所遵循的流程规则，从而让团队和利益干系人就工作协议达成一致。 价值项的“流转规则”是看板系统中最典型流程规则，它定义了一个价值项从一个阶段进入下一阶段所必须达到的标准。 图中，给出了某团队其中价值流转规则的实例，例如流程规则2定义了从UE设计阶段进入待开发开发阶段所必须达到的条件。“流转规则”的显式化，让质量内建于各个阶段——这与精益制造中内建质量的思想是一致的。某些团队使用DoD（定义完成标准）做流转规则不失为定义“流程规则”的简便方法，但应该注意的是流程规则可能需要随着团队和流程改进调整。 除“流转规则”外，其它重要的规则也可以或者需要被显式化，如，团队的工作纪律，协作规则、优先级的定义规则，缺陷处理策略，输入节奏，交付节奏等，我们称之为其他规则。 “流程规则”和“其他规则”可以让研发相关活动有序保质的完成。 初始化在制品限额(WIP） 在制品限额: 明确限制流程中每个状态上最多同时进行的任务数，是看板方法中的一个核心机制，如下图所示，列标题上面的数字标识了该阶段允许的在制品的最大数目； 设置在制品限额的目的： 优化价值流动：限制在制品数量，减少了价值项在阶段间的排队等待，缩短了价值从进入系统到交付的时间，加速了端到端的价值流动； 暴露问题：限制在制品数量，让过去被隐藏的问题，如团队协作不良、需求定义错误、开发环境低效、资源分配不均衡等得以显现； 初始化在制品限额： 工作任务的在制品限额应该按照每个人、每个开发结对或每个协同工作的小团队的平均工作项数量来设置，一般而言，限额数值应该控制在1~3人（/结对/团队）范围内比较合适，业内推荐限额设置公式为 2n-1（n为人数/结对数/小团队数）； 可以将工作任务一栏和完成队列归在一起，合并计算在制品限额；缓冲区的限额越小越好，但是其大小要确保瓶颈资源得到充分利用，并足以维系系统中的稳定流动； 无需浪费时间试图设定一个完美的在制品限额大小，初始化之后，需要在使用过程中不断的试验进行调整； 在制品限制形成的拉动机制：在制品数目小于在制品限额时，才可以从前一阶段拉入新的工作。上图中，开发阶段的在制品限制数目是14，而实际在制品数目是6，可以拉入新的工作；需求验证阶段的在制品数是3，达到了上限，就不允许拉入新工作 创建物理看板 使用看板使用看板进行协调可视化控制和拉动 首先，在制品限额。即我们看到的每一个栏目上标示的限制数字。我们要控制在那个栏目下区域卡片的数量，不能超过在制品限额的数量。例如图四中UE（2）栏目的在制品限额=2，当前没有卡片在那个区域，我们可以从输入列中拉入2张卡片到UE栏目，并开始UE设计工作。 其次，拉动策略。当我们要从输入列中拉入卡片时候，需要根据拉动策略，如工作项类型，到期日，工作项在队列中停留的时间，以及优先级选择合适的卡片到UE栏目。拉动并不是随便拉动，需要根据拉动策略选择工作项。 最后，工作项受阻和延期。根据进入队列的时间和实际日期对比，可以判断出某个工作项是否长期滞留或者受阻。一旦工作项受阻，需要将受阻问题卡片黏贴到这个工作项上以作标示。受阻问题卡片常见表现为，前置工作项卡片，管理问题卡片，或者缺陷卡片。团队需要优先排除受阻问题。让受阻工作项流动起来。 每日站立会 每日站立会是看板管理中的一项活动，聚焦在工作项的流动性问题的协调和解决。会议的组织者一般是项目经理或产品经理，参与人员为一为包括，业务，需求，设计，测试和看板上参与价值流产生和传递的干系人。 站立会的步骤一般是组织者先进行看板的走读。所谓看板的走读，即从后往前，从右到左逐一检查栏目下空间的工作项卡片，主要关注在制品限额是否已经到达上限和受阻和延期的工作项。组织者针对看板的受控项提出问题。然后团队成员简短讨论产生问题的原因，解决方案，并承诺何时可以解决该问题。另外，针对影响流动的其他并未在看板上展示出来的问题组织需要相关人员会后讨论，并协助最终把问题解决。 这种关注流动性问题的站立会，可以让更多人参与进来，同时不会导致会议时间持续过长，我们建议站立会大约15分钟左右。 另外，看板每日站立会来源与Scrum敏捷开发过程中的每日站立会，由于看板上关注了价值流转换中每个人的具体的工作项，每个工作项都可以看到当前的负责人，所以不必再让每个人讲述，昨天做什么，今天计划做什么，遇到了什么障碍类似的问题。需要特别注意的是工作项卡片上必须标示了当前工作项的负责人 调整在制品限额 如果一开始将在制品限额设定得过低，这时候团队可能会发现，在看板墙上可以看见大量代表问题的阻碍项，过小的在制品限额意味着几乎每一件事情都会变得举步维艰，许多人会无事可做而处于空闲状态；例如：开发队列的在制品限额我们设定为4，但是我们有5个开发人员，这样的在制品限额就有可能造成开发人员的产能剩余，工作闲置； 相反的，如果在制品限额设定得太高，那就不能起到在制品限额的可视化问题及预警作用，可能直到问题失控才会引起大家的重视； 例如，下图中开发队列的在制品限额我们一开始设定过高（14），开发的队列不断输入，过了一段时间之后，我们会发现过多的开发造成了等待队列的大量堆积，整个看板系统的流通遇到瓶颈，在这种状况出现之前，我们就应该通过合理的在制品限额来暴露问题 对于能力比较强且有较高成熟度的组织，由于预期之外的问题很少，所以可以考虑采用约束较为严格的在制品限制规则，对于成熟度较低的组织，把在制品的限制规则设得比较宽松为好，开始时，设得大一些，通过创建持续改进的驱动力，将其逐步调低，所有的在制品限额都需要通过看板系统不断的试验进行调整； 在有了相对合适的在制品限额后，可能会有一些意想不到的变异性因素会导致上游步骤变成一个临时瓶颈，看板系统在该处的在制品限额会让整个工作流停下来解决该处的瓶颈，避免系统产生赌塞和过载，当障碍被排除时，系统便可重新恢复流动； 建立交付节奏交付节奏是指以固定频率交付可用软件的模式。稳定交付节奏十分重要，定期交付有利于建立信任，缺乏可预测性会破坏信任。同时能够引导团队能够围绕交付目标开展工作，并降低了每次交付的协调成本，提高工作效率。 Scrum使用固定时间盒sprint来获得稳定的节奏，一般1-4周。迭代开始时候，确定代办项，然后开始一系列的分析，设计，开发，测试，重构等活动，这些活动都要基于假设代办项粒度足够小，并假设上述一系列活动都可以在时间盒内完成。 看板方法抛弃了固定时间和概念，把优先级排序，开发，交付等活动分离开来，分别对待这些活动，允许每种活动根据自身特性来调整节奏。同时看板方法更倾于更频繁的交付节奏，甚至可以支撑随需或者临时交付。 看板对于交付节奏的处理，主要把创建故事或需求条目的时间点与交付频率分离开。当准备交付时，其他工作仍然处于进行中状态。即输入节奏和交付节奏分离。好处显而易见，由于故事优先级排序活动参与人与交付活动参与人可能有不同，协调活动也不一样，按照各自的节奏和方式工作效率更高。 确定交付节奏并非一件容易的事，交付需要付出协调成本和事务成本，同时要考虑带来的市场价值。频发发布可以降低市场风险但会增加发布成本。假设50人团队，一次发布需要抽出10人投入3天来完成一次代码的交付，那么2周一次发布频率可能带来的成本较高。所以选择怎样的发布频率要根据实际情况来定义。 看板使用过程中，会逐渐形成适合团队的发布频率，也要不断提升效率提升交付节奏。 建立输入节奏 输入节奏：与参会干系人达成共识的定期召开会议的时间间隔，会议中按照优先级来选择代办请求项，填充到持续工程的输入队列中以便开发，通常我们也把这种活动叫做优先级排序节奏； 确定优先级排序节奏：节奏固定的优先级排序：通过与参加优先级排序决策的所有干系人达成一致的以合适的频率定期召开会议，建立优先级排序节奏；一般的建议是，这种会议越频繁越好，这样，输入队列就会越小，从而使系统中的浪费越少，在制品越少，前置时间越短，与此相关的成员和组织间就会更频繁的开展协作；要努力寻找开销最小且最为有效的可能的协调方案，合理情况下，越频繁举行的优先级排序会议越好； 随需或临时性的优先级排序：以固定频率定期召开优先级排序会使事物成本及协调成本逐步降低，而对于会议的效率和节奏都很高的高成熟度组织，可以选择随需或者临时进行的优先级排序； 度量看板度量和管理工作流看板系统是可预测的，专注于保持系统的顺畅流动。物理看板可以提供基本的度量数据，包括在制品数量，前置时间等，同时可基于累积流图进行分析和障碍的解决。电子看板为管理提供了更多的度量数据，为团队的管理和报告提供支撑。 度量元 度量方法累积流图 左面的斜线是累积已经开始的价值项（如用户需求）数目； 右面斜线是累积完成价值项的数目； 两条斜线的垂直距离表示某个时刻已经开始但还没有完成的价值项数目，也就是在制品数量； 两条斜线的水平间距表示价值项从开始到完成的平均前置时间，也就是从概念到交付的响应时间，它是价值流动效率的一个重要衡量； 在制品数量与周期时间成线性关系：在制品数量减少，带来平均前置时间缩短，即流量速率的提升； 斜线的斜率反应的是价值流量速率，也就是每周（或固定时间段内）可以交付的价值项数量，这里的价值可以是故事点数、功能点数等等，团队或组织的目标是要持续提升交付速率； 可以识别工作中的瓶颈：在开发的流程中，我们可以将其中每个不同环节（分析、实现、测试、部署、完成）的工作项数量用不同*颜色的带状区域可视化出来，观察一下，是否有一个区域的在变窄，同时在流程中相对于这个环节之前的环节正在变宽（说明队列正在增长，如下两图示例），如果我们看到了这种情况，我们就在吞吐量最低的地方找到了瓶颈，着手去解决它。 准时交付率通过将预估前置时间和实际前置时间进行对比，展示的是团队的可预测水平，度量一个工作项是否能够如期或者提前交付，估算的准确性是表明系统是否高效运行的一个信息指示器；我们也可以通过度量最近月份以及年度的准时交付率，来判断团队交付能力趋势的提升 初始质量缺陷意味着成本，它会影响看板系统的周期时间和流量速率，度量缺陷与在制品总量和流量速率的趋势是有意义的，我们期望看到缺陷率越来越低，同时周期时间和流量速率不断提升","categories":[{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/categories/研发管理/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://wushuning.com/tags/笔记/"},{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/tags/研发管理/"}]},{"title":"敏捷开发方法(一) Scrum","slug":"敏捷开发方法-1-scrum","date":"2018-10-25T16:00:00.000Z","updated":"2018-10-26T09:04:03.694Z","comments":true,"path":"2018/10/26/敏捷开发方法-1-scrum/","link":"","permalink":"http://wushuning.com/2018/10/26/敏捷开发方法-1-scrum/","excerpt":"","text":"Scrum团队-三大角色Scrum团队：由产品负责人、开发团队和Scrum Master组成。 是跨职能的自组织团队 自组织团队自己选择如何最好地完成工作，而不是由团队外的人指导 跨职能团队拥有完成工作所需要的全部技能，不需要依赖团队以外的人 这种团队模式的目的是最大限度地优化灵活度、创造力和生产效率 三大角色： Scrum管理-五事件Scrum 管理: 所有事件是有时间盒限定的 每个事件都有时间限制的 一旦Sprint开始，它的周期也就固定下来了，不能缩短或者延长 Scrum 管理五事件包括： Sprint 计划会议 站立会议 回顾会议 演示会议 Scrum管理实施步骤指南（1） Sprint 回顾会议会议准备 会议物品：白板、便签纸、笔等； 会议资料：通常有《Sprint任务清单》《站立会议问题跟踪表》、《Sprint验证问题一览表》、《燃尽图》 参会人员：PO、SM、Team、敏捷教练； 会议组织：可由SM，或敏捷教练，或任一团队成员组织。 会议氛围：愉悦的环境，如：可采用简易茶话会的形式，促进团队成员轻松打开话题，畅所欲言，也可促进团队成员放下手中的其他工作，把思路带到会议中 会议过程 会议组织者介绍会议目标及会议进程。明确会议规则：回顾会要求每个人都参与，做完一个迭代肯定有感受的，调动大家进行坦诚交流。 上一迭代回顾：将站会问题一览表、燃尽图、验证问题一览表等的问题进行整理回顾，哪些做了，哪些没有完成，遇到了哪些问题。 团队总结：团队成员根据上述展现的情况及自身感受，在便签纸上分别写出认为上一迭代团队或个人做的“好的”及“可改进的”两类意见，两方面各写一条。注意‘可改进’的问题最好写能够改进的。之后由大家逐一讲解便签条内容，并贴到白板相应的一列上。这里要求每个人都要写下来，避免说过就忘了。 确定改进项：团队成员针对每一位提出的问题逐一投票，每人投三票,票数最多的三个问题将在下一跌代解决。之所以定义为三个问题，因为根据业内经验超过三个问题在一个迭代里很难有效解决。 改进措施：强调共同分析，这一过程会将问题提到客观全面的高度，让团队能够更清晰的认识到问题的实质，进行问题分析。问题分析可用到的方法及工具应有很多种，比如头脑风暴、鱼骨图等。对于新的敏捷团队，敏捷教练也要发挥价值，引入一些好的建议及方法。最后挑选出在下轮迭代中切实可行的改进建议并指定责任人。 问题跟进：下一迭代回顾会议总结开始前，大家一起根据《回顾会议问题一览表》回顾上一迭代问题的解决情况直至问题关闭。具体了解：待改进的问题是否落实并得到了 解决?解决办法是否可行？解决办法是否延用？如果没有得到解决就需要 在本次会议上重新进行讨论分析。也可能在解决别的问题同时已解决掉这个问题。 常见问题Q：是否需要邀请领导参加？A：因为回顾会议需要团队成员打开话题，畅所欲言。有些团队领导参加可能会影响到团队成员说真话。所以需根据团队自身情况决定，如1,2两个迭代过后，团队协作较为顺畅，可邀请领导支持者等参加。 Q：是否可以以远程的形式开展会议？A：远程会议形式不仅耗费沟通成本，效果也会较差，SCRUM的一大特点就是Face To face，所以除特殊情况，还是要找个会议室开。 Q：是否强制要求每个人都要发言？A：要求每个人都发言，做完一个迭代肯定会有感受的，参与才能融入其中。 Q：回顾会议的结果是否需要正式记录？A：需要。回顾会议上最终确定要改进的问题及责任人要整理到书面文档里，发送团队全员。并且在下一迭代回顾会议上进行问题跟进，记录改进措施是否可行，问题是否解决。切实改进问题才能达到回顾会议的效果。 Scrum管理实施步骤指南（2） Sprint 计划会议会议准备 邀请与会者：产品负责人、Scrum Master、团队所有成员 在sprint计划会议之前，要确保产品backlog的井然有序（已按优先级排列的产品 Backlog ） 把产品 Backlog 公开给会议中的每个人，保证其可被获取 保证房间环境适合小组讨论，一个比较安静的会议室，有投影仪 每个人都可以获取上次 Sprint 评审会议和 Sprint 回顾会议的结果 用作计划纸牌的卡片 一个任务看板 会议进程第一部分：产品负责人和团队一起，在先前评估的成果基础上，定出 Sprint 目标和Sprint Backlog，决定在Sprint中需要完成哪些工作。 SM把 Sprint 完成周期公开给所有人 SM把 上一次Sprint 评审会议的结果公开给所有人 SM把 上一次Sprint 回顾会议的结果公开给所有人 PO向团队产品阐述产品远景，以及达成该远景所需要完成的产品Backlog，让团队成员了解客户的需求。 整个Scrum团队为了更好地了解Sprint的工作进行讨论。 PO和团队一起确认sprint目标。 团队初步确认要放入sprint中的Backlog。(sprint backlog) 第二部分：决定这些工作如何完成，并评估相应的完成时间。 团队从最重要的故事开始逐一讨论每个故事，估算时间。在必要的情况下拆分backlog条目，建议每个条目最好不要超过一天。拆分工作任务，SM带团队拆分 (task) 产品负责人在必要时修改重要性评分，理清每个条目的含义。(拆分sprint backlog 时做的) 产品负责人和团队需要对“完成”有一致的定义。 确定评审会日期 确定回顾会日期 确定每日站会时间和地点 制作任务看板和燃尽图 Sprint计划会议结束时，开发团队最好能够解释他们将如何以自组织团队的形式完成Sprint目标并开发期望的产品 会议输出 Sprint 目标和 Sprint Backlog 任务看板（含燃尽图） 确定好sprint演示日期 确定好sprint回顾日期 确定好时间地点，供举行每日站会 常见问题参会人员哪些是必须的？PO是必须的，产品需求，客户价值就靠他了；SM必须的，他要保证流程，整个环节里面，他是最了解流程的，会议需要他把握节奏，风险等；团队成员更是必须的。三种角色缺一不可。 sprint应该多长才好？经验证明一般2-4周比较合适，可以拥有足够的敏捷性，又让团队进入“流”的状态，团队刚开始要确定sprint的长度，不要浪费太多时间做分析，选一个可以接受的长度先开始再说，等做完一两个sprint再进行调整。 不过，团队确定了最合适长度之后，就要在长时间内坚持住。因为接下来的迭代过程有的时候会稍稍感觉有点长，有的时候感觉有点短。但保持住这个长度以后，它似乎变成了大家共同的心跳节奏，每个人都感觉很舒服。接下来无须讨论发布日期之类的事情，因为大家都知道：每过三周都会有一个发布。 挑选任务的量是多少合适？建议是（Sprint周期）0.8~（Sprint周期） 1.2，防止乐观估计和悲观估计，保证悲观的时候可以完成，乐观的时候有的做。把0.8~1.2之间的内容放到缓冲区中，以备挑选。 Sprint过程中，Sprint backlog是否可以随意添加？由SM进行风险把控，确保整个Sprint不被影响。需要判断添加的backlog优先级，是否紧急，sprint剩余工作量等进行综合考虑。 在sprint计划会议之前，要确保产品backlog的井然有序，是什么意思？井然有序表示的意思是： 所有重要的backlog条目都已经根据重要性被评过分，不同的重要程度对应不同的分数。 无论任何故事，如果产品负责人认为它会在下一个sprint实现，那它就应该被划分到一个特有的重要性层次。 分数只是用来根据重要性对backlog条目排序。假如A的分数是20，而B的分数是100，那仅仅是说明B比A重要而已，绝不意味着B比A重要五倍。如果B的分数是21而不是100，含义也是一样的。 最好在分数之间留出适当间隔，以防后面出现一个C，比A重要而不如B重要。当然我们也可以给C打一个20.5分，但这样看上去就很难看了，所以我们还是留出间隔来。 是否可以把一个产品backlog当做一个Sprint backlog？看情况而定，如果产品backlog就是一个比较小的特性来说，是可以的，如果产品backlog确实很大，那么作为Sprint backlog来说，就不太合适了。建议每个Sprint backlog最好不要超过一天。 Scrum管理实施步骤指南（1） Sprint日站立会议会议准备 确定会议主持人：SM或团队成员轮流。 确定参会人员：团队所有成员、Scrum Master、产品负责人（可选）、相关人员（可选）。 选择一个合适的固定地点，便于团队成员站立围成一圈进行交流，建议选择靠近团队办公的地点。 确定一个合适的固定时间，便于团队成员养成一个习惯，这样就不要每次开会都要下通知了，建议每日早上9:00。 每日站会时要有任务看板，在看板上粘贴本项目组的任务状态和任务工作量：未开始的任务，进行中的任务，完成的任务。也可以借助一些敏捷的工具，例如JIRA系统，可以电子化sprint backlog。物理看板更有视觉的冲击力，电子看板更便于查询、统计、度量和优化。团队成立初期可以采用物理看板，后续团队在持续迭代的过程中需要进行过程数据分析，以便不断改进优化，电子看板将必不可少 会议进程（15 分钟内） 主持人召集并控制会议时间，会议中注意引导话题，如果相关人员想发表些言论，礼貌地提醒他，该会议只允许让小组成员讨论。 会中团队成员每个人就3个问题回答，并且更新每个任务的进展状态，直接在白板上移动任务贴纸： 昨天我为开发团队达成Sprint目标做了什么？（要关注细节，又不能过分详细） 如果任务状态为已完成，把任务从“待处理”或“处理中”转为“已完成”状态； 如果任务状态为进行中，把任务从“待处理”转为“处理中”状态； 如果任务状态已经是“处理中”，需标明剩余工作量，并说明是否存在阻碍任务完成得问题； 如果任务不在 Sprint Backlog 上，添加这个任务，并标明工作量。 今天我准备如何帮助团队达成Sprint目标？ （当成员间的工作有依赖关系时，会给其他成员一个很好的提醒） 如果任务状态为“待处理”转为“处理中”状态 如果任务状态已经是“处理中”，，需标明剩余工作量，说明是否存在阻碍任务完成得问题 如果任务不在 Sprint Backlog 上，添加这个任务，并标明工作量 遇到有什么事情阻碍了我帮助团队达成Sprint目标？（让团队成员认识到在任何任务中他们都不是孤立的） 如果有阻碍团队开发进度的问题，把该障碍加入到障碍 Backlog 中。 如果有问题需要讨论，但只需要几句话的讨论，那么在会上解决；否则需要详细讨论的，记下来，单独安排一个会议专门讨论。 在会议结束时，主持人计算剩余的工作量，更新燃尽图，预测达成Sprint目标的可能性，可以做个简短的总结，我们在何处？我们离目标有多远？ 会后SM要及时解决会议上提出的问题，否则会影响大家，反映问题的积极性。 会议输出 得到最新的障碍 Backlog 得到最新的 Sprint Backlog 最新的燃尽图 常见问题每日站会有必要每天召开吗？项目的延期源自每天的延期，所以要每天实时跟踪进展，站立会议必须每天都要开。 每日站会可以用邮件代替吗？站立会议重在面对面的沟通，不能用邮件替代，E-mail只会增加沟通成本，而且不能提供细节信息或者给他人问问题的机会。 每日站会仅仅是状态汇报吗？每日站会不是状态汇报，避免团队成员陷入提供状态相关信息的这样一种模式。 真正价值在于优化开发团队达成Sprint目标的可能性，激励团队成员不断地为达成“承诺”而努力。 每日站会项目组外部的管理人员能够参加吗，可以发言吗？站立会议只允许团队成员讲话，项目组外部的管理人员可以列席，尤其是主管领导，但不能发言，不能下指令，只能旁听。在SCRUM中提倡的是团队自我管理。 每日站会可以坐着开吗？不能围在桌子周围坐着开，所有人站立围成一圈，站立暗示这个会会很短，强迫大家更专注和投入，还可以避免有人坐着收发邮件和其他分心的事情。 站立会是向SM汇报吗？不是，成员在回答三个问题时目光要注视着大家，而不是 Scrum Master，否则就变成了向领导汇报工作。对每个人回答的问题有疑问，其他成员都可以提出，而不是只有Scrum Master 一个人在问。大家是平等的，这也是一种文化的培养。 每日会议时间一般多长？应该控制在15分钟之内，如果要讨论技术问题，会后单独开会，少数人参与讨论。 如果有人开会总是迟到怎么办？建议制定惩罚措施，例如每次罚款10元，定期用罚款买一些小零食给团队成员分享，培养团队守时的文化。 Scrum管理实施步骤指南（1） Sprint 评审会议会议准备 评审会议之前，由测试人员准备本迭代成果的演示环境，PO/需求人员协作测试团队准备演示数据，脚本等。 演示环境建议使用独立的环境，非开发环境。 评审会议之前，PO/需求/测试保证所有迭代已验证条目部署到演示环境。 基于用户业务场景设计演示的操作线路，并保证覆盖到该场景下所有的待演示条目。 PO确定并邀请参会人员，通常有：Scrum团队（PO、SM、开发测试、UE/UI、敏捷教练）、用户/用户代表、其他相关干系人（如：产品线相关人员、管理人员等）。 会议资料通常有：Sprint目标、Sprint backlog等 完成情况说明及产品演示 首先由SM描述本迭代目标,确保参会人员都了解目标。 SM说明本迭代开发任务完成情况，及未完成的原因说明，需求/UE协助补充验证情况，测试依据测试报告补充测试情况。 通常由测试人员依据《Sprint backlog》进行产品演示； 参会人员根据上述演示及说明提出疑问，Scrum团队进行回答，并记 录发现的问题及期望的改进，改进可能是新的功能需求或一个功能的调整完善。 用户/PO最后依据产品演示、需求/UI/测试的验证情况，接受或拒绝 Sprint开发成果。 根据1）中的记录及2）的结果调整PBI。会后根据评审通过情况进行基线标识。 会议输出 《Product Backlog清单及验证》/《Sprint Backlog清单及验证》 《Sprint验证问题一览表》《标识Sprint基线清单》 评审会规则 迭代评审会在迭代结束前的最后一天进行，不能延期； 评审会议时间，建议根据迭代周期时间，一周对应一小时。 演示过程中，建议不要展开讨论，先记录下来演示结束后讨论。 评审通过标准：用户/PO结合演示情况及测试报告决定是否可交付 Scrum 三大工件Scrum工件 定义： 以不同的方式表现工作任务和价值，可以用来提供透明性以及检查和调整的机会； 特性： 透明度： Scrum依赖于透明性，所作出的优化价值和控制风险的决定都是基于所获知的工件状态。工件的状态必须是完全透明的，才能为产品作出决定提供一个坚实的基础；否则，作出的决定就是有缺陷的。 “完成” 定义：统一完成标准，团队理解一致； 产品待办列表 一个有序的列表，其中包含产品需要的一切可能的东西，也是产品需求变动的唯一来源 产品待办列表项包含描述、次序、估算和价值； “产品待办列表细化”指的是为列表项补充细节、估算和排序 监控实现目标的进度 产品负责人至少要在每个Sprint评审会议的时候追踪剩余工作总量。 产品负责人比较这个数量与之前Sprint评审时的剩余工作量，来评估在希望的时间点达成目标的进度。 监控预测进度工具： 趋势燃尽图（burn-downs） 燃烧图（burn-ups） 累积型的工作流（cumulative flows） Sprint待办列表 一组为当前Sprint选出的产品待办列表项，外加交付产品增量和实现Sprint目标的计划 Sprint待办列表拥有足够的细节，因此能够在每日站会中对进度的变化有清楚的认识 随着任务的进行或者完成，团队需要估算并更新剩余的工作量 监控Sprint进度 在Sprint中的任意时间点都可以计算Sprint待办列表中所有剩余工作的总和。 开发团队在每日站会时跟踪剩余的工作量，预测达成Sprint目标的可能性。 团队通过在Sprint中不断跟踪剩余的工作量来管理自己的进度。 增量 一个Sprint完成的所有产品待办列表项，以及之前所有Sprint所产生的增量价值的总和； 在Sprint的结尾，新的增量必须是“完成”的，必须可用并且达到了Scrum团队“完成”的定义的标准； 无论产品负责人是否决定真正发布它，增量必须可用； Scrum Master的职责之一：和Scrum团队以及企业一起增加工件的透明性Scrum Master的职责之二：和Scrum团队一起明确团队的完成标准 燃尽图定义是在项目完成之前，对需要完成的工作的一种可视化表示。燃尽图有一个Y轴（工作）和X轴（时间）。理想情况下，该图表是一个向下的曲线，随着剩余工作的完成，“烧尽”至零。燃尽图向项目组成员和管理层提供工作进展的一个公共视图。 燃尽图描述的是项目团队随着时间的推移而剩余的工作量，它能形象地展示当前迭代中的剩余工作量和剩余工作时间的变化趋势，是反应项目进展的一个指示器。这种可视化的管理方式，能够帮助团队工作进展更加透明。 您可以使用物理的白板＋手工更新来维护燃尽图，也可以使用EXCEL来生成和更新燃尽图也可以使用一些的敏捷团队协作工具（如：Leangoo等）来自动生成和更新燃尽图。 维护燃尽图是项目团队的日常工作。一般在每日例会后（对于敏捷研发项目，是指每日站立会）后，团队会根据任务的完成情况对其进行更新。这种可视化、简单易操作的管理方式能够帮助团队提升协作效率，并使团队工作进展更加透明，而过重的管理工具会成为团队的负担。 项目团队可以从燃尽图中识别出当前迭代的风险和问题，以便及时采取对策解决问题、规避风险。 另外，可以通过对多个迭代的燃尽图的持续分析，来对项目团团队进行持续地改进 实施方法燃尽图组成：燃尽图通常由4个核心部分组成 燃尽图横坐标：表示工期； 燃尽图纵坐标：表示要完成的工作； 计划曲线：假定项目组成员工作生产率恒定下的进度曲线； 实际曲线：实际进度曲线。 燃尽图绘制 绘制时间点：在项目组进行完项目计划会议后进行燃尽图的绘制。对于敏捷研发项目来说，是在每个sprint计划会议后进行该sprint的燃尽图绘制 绘制方法：绘制人员：燃尽图绘制和后续的更新，由项目经理指定人员进行。可以是项目经理、SM、QA或团队里的其他成员 绘制方法：在业界用的比较多的绘制方法有二种（针对故事点燃尽、针对工作量燃尽），如下: 步骤1：画出横轴和纵轴。横轴为工期，纵轴为故事点数【或工作量（人天）】。 步骤2：先出第一个点。第一个点，横坐标为开发周期的第一天，纵坐标为这个工期内估计能完成的总故事点数【或总工作量】。这个工期内估计能完成的总故事点数【总工作量】为计划会上估算的最终结果。 步骤3：找出项目计划结束点。计划结束点，横坐标为开发周期的最后一天，纵坐标为0。也就是计划在项目的最后一天“烧尽”至零。 步骤4：连接第一个点和项目计划结束点，产生的这个线就是“计划曲线” 燃尽图“实际曲线”的更新在每日例会后（对应敏捷研发项目，是指每日站立会），项目负责人安排人员计算出剩余工作的估算之和（剩余的故事点数，或剩余的总工作量），然后在燃尽图上画出一个新的点。直至项目结束，停止更新。 读懂燃尽图对于项目团队来讲，燃尽图可以说的上是最有用的一种信息发射源（Information Radiator）。对燃尽图的分析，有助于把握团队的进展情况，另外可以还揭示很多问题，比如团队的表现如何、如何进一步改进等等。 燃尽图有助于回答的问题，例如： 团队的计划制订情况如何？ 在一个Sprint中，团队对计划的故事的执行情况如何？ 团队是自我管理的么？作为“团队”来说，大家的工作步调一致么？ 团队能进行哪些改进？ 可以借鉴和学习一些敏捷大师对燃尽图的分析和总结，来解读各项目自己的燃尽图，Hiren向我们展示了如右图这张图表： 图表中的蓝线 Hiren给出了自己的看法：该团队的计划并不好，因为线根本就没有触到零点，这其中的原因可能有很多。团队的一致性上也出现了问题，他们需要教练。因此，对于该团队来说，计划与自我管理方面亟需改进 图中的紫线表明该团队已经达成了目标，但并没有主动去更新数字，原因可能有二：要么他们太懒了，没有更新剩余的工作量；要么是在该Sprint的最后舍弃了很多用户故事。 图中的绿线表明对于一个计划良好的成熟团队工作量的燃尽情况，该团队是自我管理并且在整个Sprint中拥有足够的故事要去实现。这条线接近于理想情况，表明了软件开发的复杂性。","categories":[{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/categories/研发管理/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://wushuning.com/tags/笔记/"},{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/tags/研发管理/"}]},{"title":"PM、RD、QA、OP等英文缩写是什么意思？","slug":"研发中各种title-RD-PM等含义","date":"2018-10-25T16:00:00.000Z","updated":"2018-10-26T09:12:43.162Z","comments":true,"path":"2018/10/26/研发中各种title-RD-PM等含义/","link":"","permalink":"http://wushuning.com/2018/10/26/研发中各种title-RD-PM等含义/","excerpt":"","text":"PM: Product Manager，产品经理，又称品牌经理。举凡产品从创意到上市，所有相关的研发、调研、生产、编预算、广告、促销活动等等，都由产品经理掌控。RD: Research and Development engineer，研发工程师，对某种不存在的事物进行系统的研究和开发并具有一定经验的专业工作者,或者对已经存在的事物进行改进以达到优化目的的专业工作者。QA: Quality Assurance，品质保证。QA的主要职责就是质量保证工作。OP: Operator，操作员，管理员。PO: Product Owner 项目负责人","categories":[{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/categories/研发管理/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://wushuning.com/tags/笔记/"},{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/tags/研发管理/"}]},{"title":"QCon2018全球软件开发大会PPT合集","slug":"QCon2018全球软件开发大会PPT合集","date":"2018-10-23T16:00:00.000Z","updated":"2018-10-29T06:10:02.429Z","comments":true,"path":"2018/10/24/QCon2018全球软件开发大会PPT合集/","link":"","permalink":"http://wushuning.com/2018/10/24/QCon2018全球软件开发大会PPT合集/","excerpt":"","text":"QCon2018全球软件开发大会PPT合集链接: https://pan.baidu.com/s/1CSD8SJg5eMqpoC3TEH3XmQ 密码:lthe QCon大会是由InfoQ中文站主办的全球顶级技术盛会，每年在伦敦，北京，东京，纽约，圣保罗，上海，旧金山召开。自2007年3月份首次举办以来，已经有超万名高级技术人员参加过的QCon大会。 QCon内容源于实践并面向社区，演讲嘉宾依据热点话题，面向5年以上工作经验的技术团队负责人，架构师，工程总监，高级开发人员分享技术创新和最佳实践。 2018 QCon全球软件开发大会演讲专题产品经理必修之用户细分与产品定位产品经理遇到的最大的问题是自认为炫酷的产品没有用户去使用，因此产品经理的第一节必修课就是在确定产品的价值主张之后，对产品的最终用户进行详细的细分与定义，确定产品的定位。 工程师个人成长与技术领导力工程师成长就是从关心自己的事到关心别人的事，再到关心公司的事的历程。本专题将为大家分享个人成长和技术管理的技巧，帮助大家实现从“做人做事”到“带人带事”的职场跃迁。 国际化互联网业务架构随着全球互联网的蓬勃发展，越来越多的公司把业务拓展到国外，这一变化给技术带来很多新的挑战。本专题旨在发掘在国际化架构先行者的经验，碰撞并探索一套可供参考的国际化架构模式。 互联网高可用架构本专题将为您解答大规模互联网系统的架构设计和实现案例，如何做到高可用和可扩展？大规模互联网系统的设计，开发和运维，有哪些值得借鉴的经验和理念？业界有哪些最新的探索实践和踩坑经历？ 后移动互联网时代的技术思考与实践移动互联网进入下半场，相关基础设施建设趋于成熟，跨平台技术仍在不断发展和创新，音视频，移动端AI落地实践，智能硬件，移动端安全等都是不容忽视的话题。希望本专题能给大家带来新的启迪。 大规模基础设施的DevOps探索业务的爆发式增长，让运维大规模基础设施成为了新的痛点。本专题中，来自一线的运维研发同学，为大家分享针对多数据中心，海量服务器和网络配置，跨应用场景，如何搭建高效准确的运维管理监控平台 硅谷人工智能以谷歌，Facebook等公司为代表，硅谷在人工智能等领域一直走在世界前列。本专题将邀请硅谷有代表性互联网公司的技术专家，分享人工智能领域的前沿研发经验。 硅谷运维技术硅谷的互联网公司在运维方面有很多独到之处。像Chaos Engineering和Resilience Engineering在国内外都有很高的关注度。本专题将邀请来自硅谷的专家，分享运维方面的最新工具与实践。 人工智能与业务实践人工智能无疑是近年关注度最高的技术领域之一，很多公司在AI上投入大量资源，推动新技术在不同场景的落地，比如智能助手，自动驾驶等。本主题将从人工智能和业务结合的角度，分享人工智能领域的最新进展。 Java的生态与创新Java的具有生机勃勃的生态圈，一直得到开发人员的青睐，占据开发语言排行首位的.java有坚实的平台，完整的应用开发栈，繁如群星的开源项目，强大软件和互联网公司后盾，同时也在不断创新和进化。 大数据系统架构业务的增长会带来大量数据，很多公司都搭建了自己的大数据处理平台，或者向新的数据平台/框架迁移。本专题将关注大数据平台技术选型，搭建，系统迁移和优化方面的经验。 区块链技术与应用随着各种数字货币的火爆，区块链技术也成为大家关注的焦点。本专题将邀请相关专家，分享区块链在典型业务场景下的落地思考，阐述背后的设计思想和技术架构。 前端新趋势前端技术日新月异，在技术的演进过程中，也有很多设计思想和架构经验值得前端工程师学习本专题将关注3个方面：实践中积累的前端架构经验，典型的前端框架应用经验，新型框架与设计思路。 深度学习技术与应用本专题将关注深度学习技术在具体业务领域的应用与发展。 微服务架构＆无服务器微服务架构近年来受到持续关注，很多公司也在对原有系统做微服务架构改造。本专题将涉及微服务架构模式，改造经验及相关配套技术。","categories":[{"name":"开发者大会","slug":"开发者大会","permalink":"http://wushuning.com/categories/开发者大会/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://wushuning.com/tags/笔记/"}]},{"title":"hexo结合gitpage搭建无限空间静态博客","slug":"hexo结合gitpage搭建无限空间静态博客","date":"2018-10-18T16:00:00.000Z","updated":"2018-10-19T08:07:03.141Z","comments":true,"path":"2018/10/19/hexo结合gitpage搭建无限空间静态博客/","link":"","permalink":"http://wushuning.com/2018/10/19/hexo结合gitpage搭建无限空间静态博客/","excerpt":"","text":"什么是HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。生成静态网页即可托管到任何支持静态网页的服务器上。 什么是GitPageGitHub Pages 与GitHub同属一个研发组织，免费为你的GitHub项目提供项目部署和托管服务，一个GitHub账号可以创建一个GitPage空间。GitPage支持静态和markdown语法的项目，并与GitHub上的项目实时同步自动渲染。所以你可以很容易使用GitPage搭建自己的博客。 特别注意：一个GitHub账号只能创建一个GitPage空间，并且名称有特殊要求下文详细说明。 可选框架：jekyll 环境准备12nodejsGit 创建github账号和同名项目 申请账号如:wangzhikui 创建同名项目:wangzhikui.github.io 如图: 进入项目的【setting &gt; GitHub Pages】 如图： 按照描述设置开启即可。 到此为止GitPages已经可以使用，提交到wangzhikui.github.io的静态或markdown形式的文件会自动同步到GitPages空间。可通过http://wangzhikui.github.io访问。 配置域名(无此需要可跳过)一、上一步GitPages设置中设置域名如：wushuning.com二、配置域名的A地址和CNAME别名本域名在阿里云申请，所以登录aliyun.com进入域名配置，域名解析做如下配置 三、项目根目录中添加名为CNAME的文件，内容为 wushuning.com hexo使用安装hexo并使用hexo创建项目安装hexo脚手架工具并使用脚手架创建项目12345npm install hexo-cli -ghexo init wangzhikuiblogcd wangzhikuiblognpm installhexo server 全局安装脚手架hexo-cli 创建一个名为wangzhikuiblog的项目 进入项目目录 安装依赖包 启动服务 服务启动成功出现如下图： 通过http://localhost:4000访问示例程序到此使用hexo创建项目已经完成 手动部署进入项目目录运行命令1hexo g 则会在项目路径中生成一个public文件夹，里边的内容即为hexo为我们生成的所有静态文件。手动将public里边的所有文件git传到wangzhikui.github.io即可。 到此可通过http://wangzhikui.bighub.io或域名（如果配置了）http://wushuning.com访问你的网站。 自动部署打开项目根目录下的_config.yml 找到如下配置:1234deploy: type: git repo: github: git@github.com:wangzhikui/wangzhikui.github.io.git 运行命令1hexo d 则将public下的文件部署到wangzhikui.github.io.git上，我这里只有一个分支master，所以默认，如果要填写分支可以配置repo。建议保持一个分支就可以了。 hexo d 命令push代码使用的是ssh，所以需要配置github的ssh key 关于key生成配置这里不赘述。 注：如果本地要维护两个github账号，这种情况有可能遇到ssh key冲突，该情况在下一篇博文描述 hexo生成的项目目录结构简介使用hexo创建的项目路径如下图： 项目源码 hexo常用命令 命令 简写 描述 hexo server hexo s 启动服务 hexo generate hexo g 生成静态文件 hexo deploy hexo d 将静态文件部署到github上 hexo clean 无 清除缓存文件 (db.json) 和已生成的静态文件 (public) 查看更多命令: hexo 命令大全 本人在部署的时候喜欢使用三个命令组合123hexo cleanhexo ghexo d 使用主题主题文件存放在 /themes下。本博客基于主题hexo-theme-pure 修改而来。大家也可前往hexo 主题库 下载自己需要的主题。 下载主题后放入/thems下 打开项目根目录的配置文件._config.yml.修改配置theme为你主题的文件夹名称即可1theme: hexo-theme-yyy 创建博文通过命令进入项目目录1hexo new test 常见一篇名为test.md的博文，路径在/source/_posts/test.md打开test.md使用markdown编辑即可。 手动创建直接在_posts文件夹下创建一个test.md的文件即可 未完待续 hexo的_config.yml和themes_config.yml分别有哪些重要配置 hexo中博文md文件都有哪些配置 hexo\b中使用gitalk添加评论功能 一个hexo主题\b都包含什么，如何入手修改主题满足自己个性化设置 本地同时维护两个github账号如何设置ssh key","categories":[{"name":"博客","slug":"博客","permalink":"http://wushuning.com/categories/博客/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://wushuning.com/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://wushuning.com/tags/github/"},{"name":"gitpage","slug":"gitpage","permalink":"http://wushuning.com/tags/gitpage/"}]},{"title":"web全栈技术图谱v1.0","slug":"web全栈技术图谱v1-0","date":"2018-10-17T16:00:00.000Z","updated":"2018-10-19T08:10:15.416Z","comments":true,"path":"2018/10/18/web全栈技术图谱v1-0/","link":"","permalink":"http://wushuning.com/2018/10/18/web全栈技术图谱v1-0/","excerpt":"","text":"根据自己接触到的技术体系整理了一个web全栈技术图谱v1.0。做个记录","categories":[{"name":"技术图谱","slug":"技术图谱","permalink":"http://wushuning.com/categories/技术图谱/"}],"tags":[{"name":"技术图谱","slug":"技术图谱","permalink":"http://wushuning.com/tags/技术图谱/"},{"name":"前端","slug":"前端","permalink":"http://wushuning.com/tags/前端/"}]},{"title":"vue基础教程(使用vue-cli搭建开发环境)","slug":"vue基础教程-使用vue-cli搭建开发环境","date":"2018-10-09T16:00:00.000Z","updated":"2018-10-23T13:59:11.866Z","comments":true,"path":"2018/10/10/vue基础教程-使用vue-cli搭建开发环境/","link":"","permalink":"http://wushuning.com/2018/10/10/vue基础教程-使用vue-cli搭建开发环境/","excerpt":"","text":"vue环境搭建https://mp.weixin.qq.com/s/izYPuxjgxLuoay75cYKglw","categories":[{"name":"vue","slug":"vue","permalink":"http://wushuning.com/categories/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"http://wushuning.com/tags/vue/"},{"name":"vue-cli","slug":"vue-cli","permalink":"http://wushuning.com/tags/vue-cli/"}]},{"title":"markdown常用语法","slug":"markdown","date":"2018-09-30T16:00:00.000Z","updated":"2018-10-26T06:01:10.230Z","comments":true,"path":"2018/10/01/markdown/","link":"","permalink":"http://wushuning.com/2018/10/01/markdown/","excerpt":"","text":"本文参考 Github markdown 基本写法，更多详细描述可直接前往Github查看 目录 标题 文本样式 引用文本 引用代码 链接 部分链接 123456- [标题](#标题)- [文本样式](#文本样式)- [引用文本](#引用文本)- [引用代码](#引用代码)- [链接](#链接)- [部分链接](#部分链接) 标题文字前使用(1-6个)#，不同数量代表文字不一样大小 标题1标题2标题3标题4标题5标题6123456# 标题1## 标题2### 标题3#### 标题4##### 标题5###### 标题6 文本样式 样式 语法 快捷键 示例 效果 粗体 ** **或__ __ command/control + b **Hello World** Hello World 斜体 * *或_ _ command/control + i *Hello World* Hello World 删除 ~~ ~~ 无 ~~Hello World~~ Hello World 粗体&amp;斜体 ~~ ~~和_ _ 无 **Hello _World_** Hello World 表格源码123456| 样式 | 语法 | 快捷键 | 示例 | 效果 ||:----|:----:|-----:|-----:|----:|| 粗体 | `** **`或`__ __` | command/control + b | `**Hello World**` | **Hello World**|| 斜体 | `* *`或`_ _` | command/control + i | `*Hello World*` | *Hello World* || 删除 | `~~ ~~` | 无 | `~~Hello World~~` | ~~Hello World~~ || 粗体&amp;斜体 | `~~ ~~`和`_ _` | 无 | `**Hello _World_**` | **Hello _World_** | 引用文本使用 &gt;，可以使用多个&gt;来嵌套 被引用的文字 被引用的文字2 被引用的文字3 123&gt; 被引用的文字&gt;&gt; 被引用的文字2&gt;&gt;&gt; 被引用的文字3 引用代码使用如下标志将文字包含即可 12345使用``` ``` 将代码包含即可也可以加上语言来使得块中语法高亮 ``` java ``` javascript ``` html 基础\b格式123git statusgit addgit commit java123public static void main(String[] args)&#123; System.out.print(\"Hello World\")&#125; javascript123function sayHello()&#123; console.log('Hello World')&#125; html123&lt;div&gt; &lt;h1&gt; Hello World &lt;/h1&gt;&lt;/div&gt; Github使用Linguist进行语言检测，并选择第三方语法进行语法突出显示。您可以在YAML文件中找到哪些关键字是有效的。 链接1[友云音](http://yyy.yonyoucloud.com) 友云音 链接可以使用相对地址 语法 目录 / 根目录 ./ 当前目录 ../ 上级目录 1[友云音logo](/images/logo/youyunyin-logo.png) 友云音logo 部分链接当我们写好md发布渲染生成html之后，当鼠标移动到某一块的头部的时候会显示#（也有可能是其他图表），点击之后地址栏会生成一个部分连接。使用该地址栏的地址访问该文章会自动定位到点击的这个块。比如本文的地址是:http://youyunyin.com/2018/10/01/markdown/点击[文本样式]这个标题，地址\b栏url变为http://youyunyin.com/2018/10/01/markdown/#文本样式点击改链接就会直接进入该页面并跳转到[文本样式]块中 列表使用 - 或者 * 第1行 第2行 第2-1行 第2-1-1行 第2-1-2行 第2-2行 第3行 1234567- 第1行- 第2行 - 第2-1行 - 第2-1-1行 - 第2-1-2行 - 第2-2行- 第3行 使用数字 第1行 第2行 第3行 1231. 第1行2. 第2行3. 第3行 任务列表（gihub扩展，非标准markdown） 任务1 任务2 任务3 123- [x] 任务1- [ ] 任务2- [ ] 任务3 段落文字后面输入两个空格换行 图片1![友云音logo](/images/logo/youyunyin-logo.png &quot;友云音logo&quot;) 分割线使用 三个以上 - 或 *1234-------*******","categories":[{"name":"markdown","slug":"markdown","permalink":"http://wushuning.com/categories/markdown/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://wushuning.com/tags/markdown/"}]},{"title":"codereview常见问题","slug":"codereview常见问题","date":"2018-07-20T16:00:00.000Z","updated":"2018-10-26T03:20:48.321Z","comments":true,"path":"2018/07/21/codereview常见问题/","link":"","permalink":"http://wushuning.com/2018/07/21/codereview常见问题/","excerpt":"","text":"路线图 常见代码问题常见的潜在代码问题是当前直接会导致BUG、故障或者产品功能不能正常工作的类别。 空值空值是最容易的问题 值为NULL导致空指针异常； 参数字符串含有前导或后缀空格没有Trim导致查询为空。 原则上，对于任何异常， 希望能够打印出具体的错误信息，根据错误信息很快明白是什么原因， 而不是一个 null ，还要在代码里去推敲为什么为空。这样我们必须识别出程序中可能的null， 并及时检测、捕获和抛出异常。 对于空值，最好的防护是“防御式编程”。当获取到对象之后， 使用之前总是判断是否为空，并适当抛出异常、打错误日志或做其它处理。 有的人嫌检测为空的 if 语句充斥在代码里会破坏代码的可维护性， 对此我的建议是： 空值检测一定要有， 有胜于无。在空值检测总是存在的前提下， 可以优化空值检测的方法和存在形式。 比如集中于一个类 NullChecker 中管理，并与系统的整体错误处理设计保持一致。集中管理和处理一致性原则可以作为系统设计的一个准则。 这样主流程中只要增加一行调用即可， 既可以天网恢恢疏而不漏地检测对象为空， 也不会让代码显得难看。12345class NullChecker &#123; public static void checkNull(Object obj, Error error) &#123; if (obj == null) &#123; throw new BizException(error); &#125; &#125;&#125; 在参数入口处统一做 trim。 如果在业务逻辑里做 trim ， 就会导致有的业务逻辑做了 trim ， 有的没做， 体现在产品上就会有令用户困惑的事情发生。 比如搜索和导出业务， 搜索能搜索出来， 导出却没有。 未捕获潜在的异常第二个容易出错的地方是未捕获潜在的异常。调用API接口、库函数或系统服务等，只顾着享受便利却不做防护，常导致因为局部失败而影响整体的功能。最好的防护依然是“防御式编程”。 要么在当前方法捕获异常并返回合适的空值或空对象，要么抛给高层处理。 切不可默默”吞掉错误和异常”。 如果这样做了， 出问题了等着加班和耗费大量脑细胞吧！在CodeReview的时候一定要仔细询问：这里是否可能会抛出异常？如果抛异常会怎么处理？是否会影响整体服务和返回结果？ 低性能低性能会导致产品功能不好用、不可用，甚至导致产品失败。 常见情况有： 循环地逐个调用单个接口获取数据或访问数据库; 重复创建几乎完全相同的(开销大的)对象； 数据库访问、网络调用等服务未处理超时的情况； 多重循环对于大数据量处理的算法性能低； 大量字符串拼接时使用了String而非StringBuilder. 处理建议 最好提供批量接口或批量并发获取数据； 将可复用对象抽离出循环，一次创建多次使用； 设置合理的超时时间并捕获超时异常处理； 使用预排序或预处理， 构造合适的数据结构， 使得算法平均性能在 O(n) 或 O(nlogn) ； 少量字符串拼接使用String, 大量字符串拼接使用 StringBuilder， 通常不会使用到 StringBuffer. 影响范围过大对多个模块依赖的公共函数的修改，容易造成影响范围超过当前业务改动，无意识地破坏依赖于该公共函数的其他业务。要特别慎重。可靠的方式是：先查看该公共函数的调用， 如果只有自己的业务用，可适当大胆一些； 如果有多个地方依赖，抽离一个新的函数，抽离原函数里的可复用部分，然后基于可复用部分构建新的函数。修改原则遵循“开闭”原则，才能尽可能使改动影响降低到最小化。 基类及实例字段和方法也属于公共函数的范畴。 尽量不要修改基类的东西。 单测问题单测是保证工程质量的第一道重要防线。单测问题一般包括： 单测未全部通过； 重要业务逻辑缺乏单测； 缺乏异常单测； 代码变更或BUG修复缺乏单测。 单测全部通过应当是提交代码到代码库以及代码Review的前提条件。代码提交者应当保证单测全部通过。没有捷径可走。仅当单测全部通过才提交到代码库， 可以通过工具自动化实现。 对于 maven 管理的工程， 只需一个命令：1mvn test &amp;&amp; git push origin branch_name 。 单测应当更注重质，而非单纯追求覆盖率。 缺乏单测的重要业务逻辑就像裸露在空气中的电线一样，虽然能跑起来，却是很容易“触电”的。 方法： 增加覆盖比较全面的单测。 缺乏异常单测也是代码提交者常忽略的问题。 异常也是一种实际的业务场景，反映系统的健壮性和友好性。异常应该有相应的单元测试覆盖。创建条件使之抛出异常，并判断异常是否是指定异常；若没有抛出异常或者不是指定异常，则应该 AssertFailed 而不是通过。 对于代码变更和BUG修复，如果当时由于时间紧而没有写，后续应当补上。对于每个代码变更和BUG，都可以抽离出相应的代码部分， 并有相应单测覆盖，并注明原因。 与原有业务逻辑不兼容改动针对当前需求是合理的，却与原有业务逻辑不兼容，也是常见的问题。比如增加一个搜索条件， 却不能与原有条件联合查询。 与原有业务不兼容， 一般出现在： 一对一与一对多的变化。 比如原来的关系是一个订单对应一个物流信息， 后来变化为一个订单可能对应多个物流信息； 原来的逻辑是一个订单显示多个物流信息可以更改，后来要求一个订单只展示最近一次的物流信息可以修改。多个业务组合。 业务 A 与业务 B 原来是分开发展的， 后来开展一种活动，将业务A与业务B进行一种组合营销。 此时，多半会出现很多 if-else 语句。 业务逻辑的兼容问题一般体现在系统的复用性和可扩展机制上。良好的系统可复用性和可扩展性可以更容易地做到业务逻辑兼容。 主要有如下几种级别： 自动兼容。 增加一种类型， 只是 biz_type 的值多了一种， 系统自动将已有功能适配给新的 biz_type；一点改动。增加一个分支语句， 对 biz_type 的某个特性进行扩展；一些改动。 需要见缝插针地增加一个单独的分支判断和逻辑处理模块， 对整体可扩展性没有影响， 但会造成局部的复杂化；一部分功能改动。 只需要对其中一个功能模块做个扩展；多处改动。 需要对多个功能模块做相应的改造，不过更多是新增而不是修改；难以改动。 需要深入到功能模块内部做艰难的修改， 并要保证原有功能不受影响。 如何应对呢？ 针对关联关系， 在项目之初， 可以询问清楚： 将来在产品上是否有可扩展的变化？ 及早预留空间， 或者确定产品上的对策； 在代码实现上， 兼顾考虑一对一到一对多，或一对多到一对一的关联变化。比如使用列表来表达单个信息， 使用索引从列表中获取单个信息。针对业务组合， 明确各业务的核心部分， 抽离出业务的可复用的部分，形成 API ； 考虑组合模式和装饰器模式来进行扩展。 核心不变， 外围定制化。 缺乏必要日志对于重要而关键的实例状态、代码路径及API调用，应当添加适当的INFO日志；对于异常，应当捕获并添加Error日志。缺乏日志并不会影响业务功能，但出现问题排查时，就会非常不方便，甚至错失极宝贵的机会(不易重现的情况尤其如此)。此外，缺乏日志也会导致可控性差，难以做数据统计和分析。 错误码不符合规范错误码本身不算是代码问题，不过基于整个组织和工程的可维护性来说，可以将错误码不符合规范作为一种错误加以避免。方法： 对错误码进行可控的管理和遵循规范使用。可以使用公共文档维护， 也可以开发错误码管理系统来避免相同的错误码。 参数检测缺乏或不足参数检测是对业务处理的第一层重要过滤。如果参数检测不足够，就会导致脏数据进入服务处理，轻则导致异常，重则插入脏数据到数据库，对后续维护都会造成很多维护成本。方法： 采用“契约式编程”，规定前置条件，并使用单测进行覆盖。 对于复杂的业务应用， 优雅的参数检测处理尤为重要。 根据 “集中管理和处理一致性原则”， 可以建立一个 paramchecker 包， 设计一个可复用的微框架来对应用中所有的参数进行统一集中化检测。参数检测主要包括： (1) 参数的值类型， 可以根据不同值类型做基础的检测； (2) 参数的业务类型， 有基础非业务参数， 基础业务参数和具体业务参数。 不同的参数业务类型有不同的处理。 将参数值类型与参数业务类型结合起来， 结合一致性的异常捕获处理， 就可以实现一个可复用的参数检测框架。参数检测既可以采用普通的分支语句，也可以采用注解方式。采用注解方式更可读，不过单测编写更具技巧。 引用错误对于动态语言， 由于缺乏强大的静态代码检测，修改了类引用的地方尤其要注意，很可能导致依赖的其他业务出错； 尤其是修改重名引用时。有线上故障教训。PHP工程中含有两个 Format 类， 一个基础的一个业务相关的， 被改动的类文件里开始没有指明引用，默认采用了基础 Format 类的实现， 然后提交者在改动文件头增加了对业务 Format 的引用， 导致依赖于基础Format类的其他业务不能正常工作。避免引用错误的方法： 当要在文件里增加新的类引用时， 先在文件里搜索是否有重名类的引用。如果有， 就要格外小心了。 细节错误比如数组越界、JSON解析出错、函数参数传递出错、API 版本不对、使用网上拷贝的未经测试的代码、不成熟的算法、传值与传引用、相等性比较等。 对于数组越界错误， 通常要对空数组、针对数组大小的边界值+1和-1写单测来避免； 使用网上拷贝的代码，诚然可节省时间，也一定要加工一下并用单测覆盖； 传值和传引用可通过单测来避免错误； 对象的相等性比较切忌使用等号=。 多重条件类似 if ((!A || !B) &amp;&amp; C || (D &amp;&amp; E)) 的多重条件要仔细推敲。方法： 最好拆分成多个有含义变量。 isNotDelay = !A || !B ; isNormal = C ; isAllow = D &amp;&amp; E ; cond = isNotDelay &amp;&amp; isNormal || isAllow 。 文不符实文不符实是一种可能导致线上故障的错误。比如一个 getXXX 的函数，结果里面还做了 add, update 的操作。对问题排查、产品运维等都有非常大的杀伤力。因此命名一定要用实质内容相符，除非是故意搞破坏。 跨语言或跨系统交互稍具规模的互联网创业公司通常会采用多语言开发，比如PHP作为前端，Java作为后台服务。当动态类型语言与静态类型语言交互时，会有一些问题产生。比如PHP的对象通常是一个Map, 如果是空对象就会写成 [], 然而 [] 会被 Java 解析成列表。这样， 如果数据库的值是通过 PHP 写入，那么这个值既有可能是JSON对象字符串，也可能是空数组字符串， Java 来解析就有点尴尬了。 同样，当 Java 调用 PHP 接口时， 不规范的PHP接口既可能返回列表，也可能返回 true or false ， Java 解析返回结果也会比较尴尬。 因此， 在跨语言交互的边界处，要特别注意这些类型转换的差异。 跨系统交互则主要是接口设计与约定的问题。同一个项目里不同业务团队之间的业务接口设计与约定， 不同企业里开放接口的设计与约定， 要在最初深思熟虑，一旦开放，在后期很少有接口设计改动的空间。开放接口设计要符合小而美、正交的特性， 命名要贴切一致， 参数取值要指明约束，枚举参数要给出列表， 结果返回要规范一致，可以采用通用的 {“code”:200, “msg”: “success”, “data”: xxx} 。跨系统交互也要统一对术语和接口的理解的一致。","categories":[{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/categories/研发管理/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"http://wushuning.com/tags/笔记/"},{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/tags/研发管理/"}]},{"title":"MAC破解安装IntelliJ IDEA方法","slug":"MAC破解安装IntelliJ-IDEA方法","date":"2018-01-10T16:00:00.000Z","updated":"2018-10-18T15:35:58.829Z","comments":true,"path":"2018/01/11/MAC破解安装IntelliJ-IDEA方法/","link":"","permalink":"http://wushuning.com/2018/01/11/MAC破解安装IntelliJ-IDEA方法/","excerpt":"","text":"MAC下破解安装Intellij IDEA 2017 方法破解的版本：12345678IntelliJ IDEA 2017.3.2 (Ultimate Edition) Build #IU-173.4127.27, built on December 26, 2017 Licensed to Rover12421 / Rover12421 You have a perpetual fallback license for this version Subscription is active until December 31, 2099 JRE: 1.8.0_152-release-1024-b8 x86_64 JVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o Mac OS X 10.13.2 1、下载IntelliJ IDEA 2017IDEA官网下载无限制版 2、下载破解文件JetbrainsCrack-2.6.2.jar进入下载界面 3、安装IntelliJ IDEA 20174、安装后Applications文件夹中找到IDEA,右键show package contents找到bin目录下，将下载的\b破解文件拷贝到该目录下 5、打开上图中的idea.vmoptions追加如下配置1-javaagent:/Applications/IntelliJ IDEA.app/Contents/bin/JetbrainsCrack-2.6.10-release-enc.jar 6、启动IDEA 提示需要注册，将获取的注册码填入Help &gt; Register选中Activation code 将注册码填入下面的输入框中即可","categories":[{"name":"idea","slug":"idea","permalink":"http://wushuning.com/categories/idea/"}],"tags":[{"name":"idea","slug":"idea","permalink":"http://wushuning.com/tags/idea/"}]},{"title":"SpringBoot无法启动，启动后报404错误","slug":"SpringBoot无法启动，启动后报404错误","date":"2017-11-23T16:00:00.000Z","updated":"2018-10-18T15:20:02.836Z","comments":true,"path":"2017/11/24/SpringBoot无法启动，启动后报404错误/","link":"","permalink":"http://wushuning.com/2017/11/24/SpringBoot无法启动，启动后报404错误/","excerpt":"","text":"SpringBoot无法启动可能的原因：直接将启动类放在了src.java.main下解决方案：在main下创建自己的packadge如:src.java.main.com.wzk.starter SpringBoot正常启动，但是访问的时候提示404原因是：controller没有被spring容器扫描到解决方案1：spring boot默认扫描启动类的当前包和下级包比如：启动类在 com.wzk.starter包下，那么spring 会扫描 com.wzk.starter和com.wzk.starter.*如果编写的controller没有放置在这些位置就是报错 解决方案2：配置spring boot的扫描路径在启动类上面添加注解：@ComponentScan(basePackages = {“com.wzk.*”})","categories":[{"name":"springboot","slug":"springboot","permalink":"http://wushuning.com/categories/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://wushuning.com/tags/springboot/"}]},{"title":"SpringBoot入门环境搭建，maven构建，Intellij IDEA 2016.2","slug":"SpringBoot入门环境搭建，maven构建，Intellij-IDEA-2016-2","date":"2017-11-23T16:00:00.000Z","updated":"2018-10-18T15:37:58.338Z","comments":true,"path":"2017/11/24/SpringBoot入门环境搭建，maven构建，Intellij-IDEA-2016-2/","link":"","permalink":"http://wushuning.com/2017/11/24/SpringBoot入门环境搭建，maven构建，Intellij-IDEA-2016-2/","excerpt":"","text":"Intellij IDEA工具下搭建SpringBoot入门程序使用maven环境准备 Intellij IDEA 2016.2 maven 3.0.5 SpringBoot 1.5.8 步骤一、新建项目file-&gt;new-&gt;project创建项目选择maven如下图点击next如图填入自己项目的信息，由于是创建的maven项目，所以此处填写maven需要的字段信息，具体见途中说明点击next这一步填写项目的名称和存储的路径点击finish创建成功到这一步一个简单的maven工程就创建完成了。 二、添加springboot支持pom.xml文件中增加配置123456789101112131415161718192021222324252627282930313233343536373839404142&lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;1.5.8.RELEASE&lt;/version&gt; &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;&lt;/parent&gt;&lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt; &lt;java.version&gt;1.8&lt;/java.version&gt;&lt;/properties&gt;&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt;&lt;/dependencies&gt;&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;fork&gt;true&lt;/fork&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; 由于最终要打包成jar格式所以pom.xml中还需增加配置1234&lt;groupId&gt;com.wzk&lt;/groupId&gt;&lt;artifactId&gt;spring02&lt;/artifactId&gt;&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;&lt;packaging&gt;jar&lt;/packaging&gt; 注意:jar参数的值为:jar 三、编写测试代码创建类如下，SpringBoot的启动类，如果不做任何配置，默认启动的容器是tomcat12345678910111213package com.wzk.ms;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;@SpringBootApplicationpublic class SpringbootApplication &#123; public static void main(String[] args) &#123; SpringApplication.run(SpringbootApplication.class, args); &#125;&#125; 再写一个自己的controller类，输入经典的helloworld123456789101112131415package com.wzk.ms;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@RestControllerpublic class HelloWorldController &#123; @RequestMapping(\"/hello\") public String index() &#123; String test = \"Hello\"; String test1 = \" world\"; String returnStr = test + test1; return returnStr; &#125;&#125; 四、启动测试 SpringbootApplication是一个含有main方法的java程序，所以直接运行 浏览器输入http://localhost:8080/hello因为默认是tomcat所以端口默认8080，返回Hello world. 五、配置修改springboot的配置很简单，直接修改resource下的application.properties文件即可。如修改访问端口为8081，添加配置server.port=8081 tomcat的其他配置可以参考server.port=808112345678910111213#server.address= # bind to a specific NIC#server.session-timeout= # session timeout in seconds#the context path, defaults to &apos;/&apos;#server.context-path=/spring-boot#server.servlet-path= # the servlet path, defaults to &apos;/&apos;#server.tomcat.access-log-pattern= # log pattern of the access log#server.tomcat.access-log-enabled=false # is access logging enabled#server.tomcat.protocol-header=x-forwarded-proto # ssl forward headers#server.tomcat.remote-ip-header=x-forwarded-for#server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp)#server.tomcat.background-processor-delay=30; # in seconds#server.tomcat.max-threads = 0 # number of threads in protocol handler#server.tomcat.uri-encoding = UTF-8 # character encoding to use for URL decoding 六、打包成jar打包成可运行的jarintelliJ打开命令行，运行mvn clean package即可默认输出到target目录下，然后输入java -jar xxx.jar即可启动关闭命令行窗口即关闭了容器","categories":[{"name":"springboot","slug":"springboot","permalink":"http://wushuning.com/categories/springboot/"}],"tags":[{"name":"springboot","slug":"springboot","permalink":"http://wushuning.com/tags/springboot/"}]},{"title":"Java性能调优的11个实用技巧","slug":"Java性能调优的11个实用技巧","date":"2017-11-23T16:00:00.000Z","updated":"2018-10-18T15:26:52.084Z","comments":true,"path":"2017/11/24/Java性能调优的11个实用技巧/","link":"","permalink":"http://wushuning.com/2017/11/24/Java性能调优的11个实用技巧/","excerpt":"","text":"作者：ITeye来源：ITeye[http://www.iteye.com/news/32754] 大多数开发人员认为性能优化是个比较复杂的问题，需要大量的经验和知识。是的，这并不没有错。诚然，优化应用程序以获得最好的性能并不是一件容易的事情，但这并不意味着你在没有获得这些经验和知识之前就不能做任何事。下面有几个很容易遵循的建议和最佳实践能够帮你创建一个性能良好的应用程序。 这些建议中的大多数都是基于Java的，但是也不一定，也有一些是可以应用于所有的应用程序和编程语言的。在我们分享基于Java的性能调优技巧之前，让我们先讨论一下这些通用的性能调优技巧。 1.在必要之前，先不要优化这可能是最最重要的性能调优技巧之一。你应该遵循常见的最佳实践，并尝试有效地实现你的用例。但这并不意味着在证明它是必要之前，替换任何标准库或构建复杂的优化。 在大多数情况下，过早的优化占用了大量的时间，使得代码难以读取和维护。更糟糕的是，这些优化通常不会带来任何好处，因为你花费了大量时间来优化应用程序的非关键部分。 那么，你如何证明你需要优化某些东西呢? 首先，你需要确定应用程序代码的速度，例如，为所有API调用指定一个最大响应时间，或者指定在特定时间范围内导入的记录数量。完成之后，你可以度量应用程序的哪些部分太慢而需要改进。当这样做之后，那么请继续看第二个调优技巧。 2.使用分析器来找到真正的瓶颈在你遵循第一条建议，并确定你的应用程序的某些部分的确需要改进之后，问自己从哪里开始? 你可以用两种方法来解决这个问题: 你可以看一下你的代码，从看起来可疑或者你觉得它可能会产生问题的部分开始。或者使用分析器，获取代码中每个部分的行为和性能的详细信息。至于为什么应该总是遵循第二种方法。 答案应该很明显，基于分析器的方法能让你更好地理解代码的性能含义，并允许你关注最关键的部分。如果你曾经使用过分析器，你将会惊讶于代码的哪些部分造成了性能问题。然而，很多时候，你的第一次猜想会把你引向错误的方向。 3 .为整个应用程序创建性能测试套件这是另一个帮助你避免许多意想不到问题的一般技巧，这些问题通常发生在性能改进部署到生产环境之后。你应该经常定义测试整个应用程序的性能测试套件，并在你完成性能改进之前和之后运行它。 这些额外的测试运行将帮助你识别更改的功能和性能方面的影响，并确保你不会发布一个弊大于利的更新。如果你的任务运行于应用程序的多个不同部分比如数据库或缓存，这一点尤其重要。 4.首先解决最大的瓶颈问题在创建了测试套件并使用分析器对应用程序进行分析之后，你就有了一个需要提高性能的问题列表，这很好，但它仍然不能回答你应该从哪里开始的问题。你可以从那些可以快速搞定的开始，亦或者从最重要的问题开始。 当然前者很诱人，因为这很快就能出结果。有时，可能需要说服其他团队成员或你的管理层，性能分析是值得的。 但总的来说，我建议首先着手处理最重要的性能问题。这将为你提供最大的性能改进，而且你可能只需要修复这些问题中的几个就可以解决你的性能需求。 在了解通用性能调优技巧之后，让我们再来仔细看看一些特定于Java的调优技巧。 5.使用StringBuilder以编程方式连接字符串在Java中有许多不同的连接字符串的选项。例如，可以使用一个简单的+或+ =、老的StringBuffer或StringBuilder。 那么，你应该选择哪种方法呢? 答案取决于连接字符串的代码。如果你以编程方式向字符串中添加新内容，例如，在for循环中，你应该使用StringBuilder。它比StringBuffer更容易使用和提供更好的性能。但是请记住，StringBuilder与StringBuffer不同，它不是线程安全的，而且可能不适合所有用例。 你只需要实例化一个新的StringBuilder，并调用append方法在字符串中添加一个新的部分。当你添加了所有的部分后，可以调用toString()方法来检索连接字符串。 下面的代码片段展示了一个简单的示例。在每次迭代过程中，这个循环将i转换成一个字符串，并将其添加到StringBuilder sb的空间中，因此到最后，这段代码写入“this is test0123456789”到日志文件。 123456StringBuilder sb = new StringBuilder(“This is a test”); for (int i=0; i&lt;10; i++) &#123; sb.append(i); sb.append(” “); &#125; log.info(sb.toString()); 正如在代码片段中看到的，你可以为构造函数方法提供字符串的第一个元素。这将创建一个新的StringBuilder，其中包含提供的字符串和16个额外字符的容量。当你向StringBuilder中添加更多字符时，JVM将动态地改变StringBuilder的大小。 如果你已经知道自己的字符串包含多少字符，那么你可以向不同的构造函数方法提供这个数字，以实例化一个具有被定义容量的StringBuilder。这进一步提高了它的效率，因为它不需要动态扩展它的容量。 6.在声明中使用+连接字符串当你在Java中实现第一个应用程序时，可能有人告诉你不应该用＋来连接字符串。如果在应用程序逻辑中连接字符串这是正确的。字符串是不可变的，每个字符串连接的结果存储在一个新的字符串对象中。这需要额外的内存，并降低应用程序的速度，特别是在循环中连接多个字符串时。 在这些情况下，你应该遵循tip 5并使用StringBuilder。 但如果你只是将一个字符串分解成多行来提高代码的可读性，那就不是这样了。 123Query q = em.createQuery(“SELECT a.id, a.firstName, a.lastName ” + “FROM Author a ” + “WHERE a.id = :id”); 在这些情况下，你应该用一个简单的+来连接你的字符串。Java编译器将优化它并在编译时执行连接。因此，在运行时，代码只使用1个字符，不需要连接。 7.尽可能使用基本数据类型另一种避免开销，提高应用程序性能的快速方法就是使用原始数据类型而不是它们的包装类。因此，最好是使用int而不是Integer，或者是double而不是Double。这将让JVM将值存储在堆栈中，以减少内存消耗，并更有效地处理它。 8.尽量避免BigInteger和BigDecimal由于我们已经讨论了数据类型，我们再来看下BigInteger和BigDecimal。尤其是后者，由于其精度高而受欢迎。但这是有代价的。BigInteger和BigDecimal比简单的long或double需要更多的内存，并且大大降低所有的计算速度。因此，如果你需要额外的精度，或者你的数字超过了一个long范围，最好三思而后行。这可能是你在提升性能问题中唯一需要更改的地方，特别是当你正在实现一个数学算法。 9.首先检查当前日志级别这个建议是显而易见的，但不幸的是，你会发现许多代码忽略它。在创建调试消息之前，应该先检查当前日志级别。 这里有两个例子来说明你不应该这样做。 1234// don’t do this log.debug(“User [” + userName + “] called method X with [” + i + “]”); // or this log.debug(String.format(“User [%s] called method X with [%d]”, userName, i)); 在这两种情况下，你将执行所有需要的步骤来创建日志消息，而不知道日志框架是否使用日志消息。在创建调试消息之前，最好先检查当前日志级别。 1234// do this if (log.isDebugEnabled()) &#123; log.debug(“User [” + userName + “] called method X with [” + i + “]”); &#125; 10.使用Apache Commons StringUtils.Replace 代替String.replace一般来说,String.replace 方法工作得很好，而且非常高效，特别是如果你使用的是Java 9。但是，如果应用程序需要大量的替换操作，并且你还没有更新到最新的Java版本，那么检查更快和更有效的替代方案仍然是有意义的。 一个候选就是 Apache Commons Lang’s StringUtils.replace 方法。正如Lukas Eder在他最近的一篇博客文章中所描述的那样，它大大超过了Java 8的String.replace 方法。 它只需要很小的改变。你只需要为Apache’s Commons Lang 项目增加一个Maven依赖项到你的应用pom.xml，并用StringUtils.replace方法替换所有String.replace方法的调用。 1234// replace this test.replace(“test”, “simple test”); // with this StringUtils.replace(test, “test”, “simple test”); 11.缓存昂贵的资源，比如数据库连接缓存是一种流行的解决方案来避免重复执行昂贵或频繁使用的代码片段。一般的想法很简单:重复使用这些资源比一次又一次地创建一个新的资源要便宜得多。 一个典型的例子就是在池中缓存数据库连接。创建新连接需要时间，如果重用现有连接，则可以避免。 还可以在Java语言本身中找到其他示例。例如，Integer类的valueOf方法缓存了- 128和127之间的值。你可能会说，创建一个新整数并不太贵，但它经常使用，缓存最常用的值提供了性能方面的好处。 但当你考虑缓存时，请记住，缓存实现也会产生开销。你需要花费额外的内存来存储可重用资源，因此可能需要管理你的缓存，以使资源能够访问或删除过时的资源。 因此，在你开始缓存任何资源之前，请确保是经常使用。 总结正如你所看到的，提高应用程序的性能有时不需要做大量的工作。这篇文章中的大多数建议，其实只需要稍微的努力就可以将它们应用到代码中。 但通常最重要的建议是很编程语言无关的: 在你知道有必要之前，不要优化 使用分析器来找到真正的瓶颈 首先解决最大的瓶颈问题","categories":[{"name":"java","slug":"java","permalink":"http://wushuning.com/categories/java/"}],"tags":[{"name":"java性能","slug":"java性能","permalink":"http://wushuning.com/tags/java性能/"}]},{"title":"猫-森林-纪念","slug":"纪念爱猫森林","date":"2017-10-25T16:00:00.000Z","updated":"2018-10-18T15:18:39.815Z","comments":true,"path":"2017/10/26/纪念爱猫森林/","link":"","permalink":"http://wushuning.com/2017/10/26/纪念爱猫森林/","excerpt":"","text":"2015-4-18号","categories":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/categories/人生/"}],"tags":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/tags/人生/"}]},{"title":"设计模式-极简笔记-6大设计原则","slug":"设计模式-极简笔记-6大设计原则","date":"2017-10-12T16:00:00.000Z","updated":"2018-10-18T15:16:19.155Z","comments":true,"path":"2017/10/13/设计模式-极简笔记-6大设计原则/","link":"","permalink":"http://wushuning.com/2017/10/13/设计模式-极简笔记-6大设计原则/","excerpt":"","text":"通过尽量少的语言描述设计模式的相关概念如果想要更详细的描述可参看设计模式其他相关书籍或者资料 6大设计原则单一职责原则英文名称：Single Responsibiity Principle 简称：SRP定义：在定义接口的时候，接口的功能要单一。该原则素来有很多的争议，因为这个原则在实际开发过程中很难界定功能范围，所以需要根据实际情况使用，不要生搬硬套。 里氏替换原则英文名称：Liskov Substitution Principle 简称：LSP通俗定义：只要父类能出现的地方子类就可以出现，而且替换为子类不会产生任何错误或异常该原则主要为继承定义一个规范，子类尽量不要出现父类不存在的方法或属性 依赖倒置原则英文名称：Dependence Inversion Principle 简称：DIP通俗定义：通常依赖都是指的具体实现类的依赖和耦合，这里倒置就是要把依赖放到接口层。具体的实现类之间不存在依赖，实现类只是依赖他们的接口。该原则就是经常谈到的面向接口编程 接口隔离原则英文名称：Interface Segregation Principle 简称：ISP通俗定义：客户端不应该依赖它不需要的接口，一个类对另一个类的依赖应该建立在最小的接口上。该原则规范了我们对外提供接口时的一个规范，对外提供接口时，只提供需要的接口。比如：提供通过姓名查询用户信息的接口，就提供queryByName(String name),而不是提供一个通用query(String queryParam)，约定参数为{“name”:张三}这样的形式。 迪米特法则英文名称：Law of Demeter 简称：LOD或英文名称：Least Knowledge Principle 简称：LKP本人喜欢第二个描述。通俗定义：一个类再调用其他类或者接口的时候应该对该类有最少的了解，只要知道该接口能实现什么功能即可，至于如何实现，以及过程都不需要关心。 开闭原则英文名称：Open Closed Principle 简称：OCP通俗定义：一个接口，类，模块的定义应该对扩展开放，对修改关闭该原则规范我们在开发过程中尽量通过扩展的方式来实现新的功能或者变化，而不是去修改原有逻辑或者接口","categories":[{"name":"设计模式","slug":"设计模式","permalink":"http://wushuning.com/categories/设计模式/"}],"tags":[{"name":"设计模式","slug":"设计模式","permalink":"http://wushuning.com/tags/设计模式/"}]},{"title":"子类与父类,向上转型与向下转型","slug":"子类与父类-向上转型与向下转型","date":"2017-10-11T16:00:00.000Z","updated":"2018-10-18T15:38:31.741Z","comments":true,"path":"2017/10/12/子类与父类-向上转型与向下转型/","link":"","permalink":"http://wushuning.com/2017/10/12/子类与父类-向上转型与向下转型/","excerpt":"","text":"作者：本人来源：原创 定义向上转型：子类赋给父类向下转型：父类赋给子类（必须是父引用本身已经指向子类对象的情况，并且要加子类强制转换，否则报错） 12345678910111213141516171819202122232425262728public class Super &#123; public name = \"父类\"; public void MyName()&#123; System.out.println(\"名字：\"+name); &#125;&#125;public class Sub extends Super&#123; public name = \"子类\"; public void MyName()&#123; System.out.println(\"名字：\"+name); &#125;&#125;public Class Test&#123; public static void main(String args[])&#123; Super super = new Sub();//向上转型 Sub sub = (Sub)super;//向下转型，且super指向子类对象 //注属性不会覆写，super是父类型引用所以指向的属性是父类型属性 super.MyName();//输出：名字：父类 sub.MyName();//输出：名字：子类 //super_1指向的是父类型，强制转换的时候出错 Super super_1 = new Super(); Sub sub_1 = (Sub)super_1;//编译错误，ClassCaseException &#125;&#125;","categories":[{"name":"java","slug":"java","permalink":"http://wushuning.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://wushuning.com/tags/java/"}]},{"title":"一个程序员跑了几千公里到戈壁徒步70KM完--感悟","slug":"一个程序员跑了几千公里到戈壁徒步70KM-完","date":"2017-10-09T16:00:00.000Z","updated":"2018-10-18T15:23:58.759Z","comments":true,"path":"2017/10/10/一个程序员跑了几千公里到戈壁徒步70KM-完/","link":"","permalink":"http://wushuning.com/2017/10/10/一个程序员跑了几千公里到戈壁徒步70KM-完/","excerpt":"","text":"概述从五月份的医疗行业沙漠徒步挑战赛到10.1的戈壁挑战赛跟随一个初创团队，感受创业过程感悟颇多作为组委会裁判，IT中心负责人，中控台操盘手…很遗憾，以后应该不会再继续参与了，具体原因不想缀述。到可以用一个小寓言表达：一个水桶能装多少水是由最短那跟木板决定的。 创业真的需要：一个灵魂人物+靠谱的团队+能力的均等创业不是救助，没人可怜你，没人教你，所有东西都要自己悟。创业也不是小孩过家家，专业是唯一标准也多少明白了华为事件：“辞退你与能力无关”。 感悟-态度态度是，一个靠谱的人永远比一个有能力缺不靠谱的人受欢迎。 感悟-情商听很重要，听别人说了什么，听别人没说什么，听自己想说什么，听自己说正确了多少。说很重要，说要看场合，看人，看场景，要思而后说，很多人讲话不经过大脑。悟很重要，交流是一门艺术，多思多想多悟，想不明白就闭嘴少说话。言多必失。 感悟-信仰很多人都说中国人没有信仰，不能全否定，但至少绝大多数是没有的人一定要有信仰，信仰决定你对人生的态度，决定你的朋友圈，以及你的家庭人要有自己坚持的东西。 结语要加入比自己优秀的圈子，这样你才能更优秀，至少不能比自己差要加入\b比自己聪明的圈子，这样你能更聪明，至少不能比自己笨要加入与自己情商匹配或更高的圈子，与这些人共事是一种享受当你发现自己开始于身边的人格格不入的时候就要好好想想，是自己退步了，还是已经超越了大部分人如果是前者毫无疑问赶紧追上，如果是后者，则需要考虑继续往上一个阶层，或者换个环境。比你优秀的人很多，要善于发现，不要在比你差的人身上耗费太多精力，否则你只会跟他一样。","categories":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/categories/人生/"}],"tags":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/tags/人生/"}]},{"title":"一个程序员跑了几千公里到戈壁徒步70KM","slug":"一个程序员跑了几千公里到戈壁徒步70KM","date":"2017-10-03T16:00:00.000Z","updated":"2018-10-18T15:13:47.873Z","comments":true,"path":"2017/10/04/一个程序员跑了几千公里到戈壁徒步70KM/","link":"","permalink":"http://wushuning.com/2017/10/04/一个程序员跑了几千公里到戈壁徒步70KM/","excerpt":"","text":"10月5日-10月7日，三天70+km徒步，敦煌，戈壁。从北京-到敦煌 这一串描述很难跟一个程序员想到一起，有时候自己想来也很疯狂。 慢慢的发现自己有些改变，不太发微信状态，不发微博，不看qq 更多的是看看书，看看新闻，看看网上分享的技术文档，上知乎，csdn回答一些技术问题 闲暇时间开始重新写一写东西。 生活中开始参与非IT相关的领域的活动 本人并非什么技术狂人，也不是编程技术的狂热爱好者，工作久了，也尝试拓宽自己的视角，接触不一样的人，不一样的事。 久了，也懂得了很多，比如情怀这个东西，我们知道锤子一直在玩情怀，我们提到锤子也总在说情怀，可是你懂情怀是什么吗？用情怀是一种什么感受？其实很遥远。 但是当你身边出现这么一群人，因为情怀，因为梦想去做一件事情的时候，这种感觉是没法形容的。很幸运我碰到了这么一位。也有幸参与其中一部分。","categories":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/categories/人生/"}],"tags":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/tags/人生/"}]},{"title":"mac中JDK安装配置","slug":"mac中JDK安装配置","date":"2017-09-23T16:00:00.000Z","updated":"2018-10-18T15:29:08.469Z","comments":true,"path":"2017/09/24/mac中JDK安装配置/","link":"","permalink":"http://wushuning.com/2017/09/24/mac中JDK安装配置/","excerpt":"","text":"系统内置JDKmac默认自带一个jdk6 自定义安装JDK从oracle下载jdk安装后默认安装路径如下1/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home 并且系统内置的jdk会默认为最新安装的 环境变量配置vi .bash_profile输入：1234export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Homeexport CLASSPAHT=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=$JAVA_HOME/bin:$PATH:export PATH 删除已经安装的jdk1sudo rm -rf jdk1.8.0_101.jdk 可以进入12cd /usr/libexecjava_home -V 查看所有jdk的路径1/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home","categories":[{"name":"java","slug":"java","permalink":"http://wushuning.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://wushuning.com/tags/java/"},{"name":"mac","slug":"mac","permalink":"http://wushuning.com/tags/mac/"}]},{"title":"mac中配置eclipse启动使用的jdk，eclipse.ini文件","slug":"mac中配置eclipse启动使用的jdk，eclipse-ini文件","date":"2017-09-23T16:00:00.000Z","updated":"2018-10-18T15:31:24.816Z","comments":true,"path":"2017/09/24/mac中配置eclipse启动使用的jdk，eclipse-ini文件/","link":"","permalink":"http://wushuning.com/2017/09/24/mac中配置eclipse启动使用的jdk，eclipse-ini文件/","excerpt":"","text":"设置eclipse使用的jdk application中找到eclipse右键show content找到eclipse的配置文件eclipse.ini 增加配置如下 12-vm/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home 其中jdk的路径可以通过命令1/usr/libexec/java_home -V 最后是大写的V查看","categories":[{"name":"eclipse","slug":"eclipse","permalink":"http://wushuning.com/categories/eclipse/"}],"tags":[{"name":"eclipse","slug":"eclipse","permalink":"http://wushuning.com/tags/eclipse/"}]},{"title":"校招是怎样一种体验，应届程序员如何准备校招？","slug":"校招是怎样一种体验，应届程序员如何准备校招","date":"2017-09-18T16:00:00.000Z","updated":"2018-10-18T15:13:55.089Z","comments":true,"path":"2017/09/19/校招是怎样一种体验，应届程序员如何准备校招/","link":"","permalink":"http://wushuning.com/2017/09/19/校招是怎样一种体验，应届程序员如何准备校招/","excerpt":"","text":"很久没写东西，也很久没整理，难得有时间清闲一下，坐下来记录一下最近的经历。 9月是开学季，也是校园招聘开始的季节，这次公司的校招比较提前，以往都是到了10月份才来，领导商量决定早点来以免被别的公司刷了一轮，剩下的都是质量不太好的。想想也有一定的道理。 这次被集团选为面试官，去山东，山西两站，社招面了很多，校招还是头次，多少有些期待。 写下这些文字的时候已是结束了山东，正在山西境内。山东大学的学生整体还是不错的，人都比较低调，少有特别个性的，最终发了不少offer，本人也遇到一个比较满意的想招到自己部门的学生，更巧的是还是老乡。但是遗憾的是没有遇到特别优秀让人特别兴奋的学生，唯一想要给高潜的就是这位老乡（此处没有个人感情色彩）。 从面试官的角度看。对于面试的同学还真是有些建议1，首先就是准备，现在的学生极个别的会去准备一些面试经验，其他的就是看缘分，虽然面试问的题目很多都有面经，有的学生也不屑去看，认为只要真实表达自己就可以了，这个其实是错误的，一些基础的东西久了没用可能会忘记，时不时的还是要复习一下，就像到现在本人闲着没事还会去看看java基础类型，java各种集合类的集成关系，源码，各类讲解多线程的文章。而且现在资料好找看起来很方便。 2，准备痕迹过于浓厚，有些同学确实准备了，但是为了面试而面试，而且非常实在的说自己就是刷题，这真的是无语，你那么诚实的告诉我了，我就只能诚实的让你不过了。 3，说话的艺术，平时说的少，面试的时候密集的沟通交流，很多学生就有点慌，害怕冷场就一个劲的说，问题刚问完就接着回答，也不多想，讲了很多一句重点都没有，这个其实是很吃亏的，说多错多这句真理不信不行。 4，简历，这个是真的要花很多心思准备，对于应届生来讲，本身没有太多的项目经验，而面试官能了解这个人的第一印象就是简历，从简历上看出你这个人在学校学习怎样，是不是一个会主动动手写代码的人，是不是一个会主动接触新技术的人。有人会疑问，很多东西我只是看了一些但是完全没用过或者没写过可以写吗。我的回答是当然可以，这要看你的写法，你要写精通，那准备死就行了，你要写熟悉，可能也会被问死，但是你可以说自己正在研究哪一个方向，正在看哪一些技术栈等等。这样至少能看出你的兴趣点和规划。 5，自我介绍，不知道现在是不流行自我介绍了吗？还是不关注，大部分人就三句话，我是谁，哪个学院，本科还是硕士，多一点的就是主要学的课程，再多一点就是做了一些什么项目。其实我觉得这个还是要多准备一下，至少要30s吧，其实这个过程是给面试官再详细看一下你的建立，也避免冷场吧。既然是技术，可以多介绍一下自己的技术特长，爱好的方向，平时喜欢做点什么研究等等。至少不要让人感觉你什么也没准备。 6，关于项目，面试中本人比较喜欢问简历上做过的项目，至于为什么这里讲一下，如果简历上没有什么项目，或者描述极其简单，那么自然就是去问一些java底层实现，说实话，java知识体系如此庞大，运气不好问的问题一个答不上。如果有项目经历的话很多时候都会聊项目怎么实现，做了什么功能，用了什么技术栈，遇到什么问题，如何解决的等等，只要稍微准备一下就能很好回答。有人就说了假如没有项目经历怎么办，这个时候我只想说难道你在大学就从来没有做过学生管理系统。。。。。（对不起这是个冷笑话） 7，关于项目，一定要描述清楚项目的功能，以及你做的功能，还有就是用到了什么技术栈。同时对于项目要充分准备。有的同学被问到项目的时候回答很随意：其实即使做了一些的crud，没有太复杂。我只想说既然啥都没有你写上干嘛，你自己都瞧不上难道要我觉得你的项目很厉害。 8，穿着，不知道是不是大环境就是这样，大家都不注意自己的穿着，这里讲的不是西装领带，你这样穿反而不好，而是干净整洁并且要像一个工作者，平时怎么穿面试怎么穿多少有点随意，至少要发型整洁，上衣素净，长裤，皮鞋或者稍微正式的休闲鞋。至少不要印花T恤短裤，休闲网鞋，搭配上也合理。程序员毕竟不是屌丝，虽然很多人都自嘲屌丝程序员，那都是无能的无奈，程序员，高端技术人士，不管别人怎么看我们的职业，至少我们自己要尊重。 零零洒洒写了这么多，这次来感触很深，本人不太爱说话，尤其是人多的时候，多半一个人带着，不断的回想与每一个人的交谈，也在发觉自己的不足，也希望这些文字能被一些同学看到，多少有些帮助吧。","categories":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/categories/人生/"}],"tags":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/tags/人生/"}]},{"title":"跟谁一起工作，到底有多重要？","slug":"跟谁一起工作到底有多重要","date":"2017-02-22T16:00:00.000Z","updated":"2018-10-18T15:24:15.125Z","comments":true,"path":"2017/02/23/跟谁一起工作到底有多重要/","link":"","permalink":"http://wushuning.com/2017/02/23/跟谁一起工作到底有多重要/","excerpt":"","text":"作者：孙圈圈来源：圈外（iquanwai） 《浪潮之巅》的作者吴军，在《得到》专栏里，提及了 Google 刚进中国时候的一件事。刚开始，Google 总部对中国研发团队的评价非常低，因为“出工不出活儿”，北京的三四个工程师都抵不上 Google 总部的一个工程师。 后来吴军帮忙分析了原因，他发现，那些工程师都不善于找到最重要的工作并优先完成它们。中国研发团队里，所有的工程师都是新人，没有人告诉他们该如何工作，而在 Google 总部，新员工只是一小部分，所以很容易在有经验的员工带动下快速掌握工作技能。 之后两年，Google 总部的工程师陆续来中国帮助团队梳理工作方式，而中国团队也会去 Google 总部交流，这种情况就得到了改善，中国研发团队也最终得到了总部的认可。 Google 工程师这么聪明的一群人，尚且需要学习正确的工作方式，才能有效产出，何况大多数人？ 我们一直都认为，如果一个人智商情商正常、学习和工作意愿高，就一定能出成绩。 然而，我带过很多人，也招过很多人，却发现一个奇怪的现象：有一些人，十分有意愿学习，非常努力，智商情商也都正常，然而工作产出却非常低，甚至不如很多资质低于他们的人。 我一直百思不得其解，一度怀疑自己看人不准。直到前阵子看到吴军的这段叙述，才幡然醒悟，仔细回想了这些人的工作方式，将他们与产出高的人相比，发现他们无一例外都存在这三个问题： 问题 1：只关注任务，不关注目标 假如你的老板正在飞机上，还有 1 小时落地，下来之后需要给客户做一个重要汇报，而你需要给他做一份 PPT。但因为你错估了时间，导致 PPT 草草做完，而且发现其中一些数据没有，你怎么办？ 低效人士的做法是：疯狂地找数据，最后可能数据有了，然而 PPT 没有来得及做完，或者质量不高。 一般人的做法是：找人帮自己一起找数据。 而最高效的那些人，会根据老板此次汇报的目的，判断这些数据在其中的作用大小，如果作用不大，那么就把时间花在完善重要页数、而不是找数据上，如果很关键，那么就找其他人帮忙，或者找一些替代数据。 这三类人之间的差距，其实就是任务导向与目标导向的差距。 我此前的咨询公司，在做高潜人才研究的时候，有个发现：高潜力的人才是有共性的，具备这些共性的人，几乎做什么都能做好，而不具备的，几乎做任何工作都会障碍重重。 这其中，有一项共性就是 Result-driven （结果驱动）。那些高产出的人，未必动作更快，而是更善于判断，什么事情对结果是最有效的，然后，用尽一切办法保证结果达成，而不是死守着原有的工作任务。 实际上，结果驱动不仅仅是一种工作习惯，更是一种思维方式。这种以终为始的思维模式，是我自己刻意训练的最有用的思维模式之一。 比如思维训练营里，有学员问我：如何让自己对一个行业有真知灼见？ 想想看，如果是你，会如何回答？ 我的回答方式，是反问她：具备真知灼见的目的是什么呢？是想让客户更加信任你、还是想让老板看到你的进步？ 假设你是希望客户信任你，觉得你懂他，那你要做的，就是看这个行业里的客户有什么痛点，然后针对这几个痛点，下功夫研究和分析，有更多洞见，然后借机沟通出去。了解一个行业，是一个太大的话题，没有目标，根本无从下手。 所以，没有结果驱动的思维，而仅仅死守着工作任务，最终就是，出工不出活儿。 问题 2：应激式工作，而非统筹式工作 如果你观察周围的同事，会发现，整天风风火火、急得上蹿下跳、各种任务来回切换的人，有时候产出并不高。看他们工作，就好像打地鼠一样，打完一个，另一个又冒上来，连看的人都跟着焦虑起来。 而另一类人，他们做事专注、条理清晰、看起来很淡定，但最后，多困难的事儿都默默搞定了。 两者的差别就在于，第一类人总是应激式工作。他们每天起来的第一件事，不是规划当天的工作，而是马上投入工作，以至于到了下班之后，发现还有很多事情没做完，而没做完的，可能又是最重要的。 另外，领导临时给个任务、客户临时有个要求、同事临时要个数据，他们都会停下手里的事情，去忙这些，最终，在任务的切换上花费了巨大的精力。 我跟公司的运营打过一个比方：假设你每项工作任务平均半小时可以做完，而任务之间的切换通常也要半小时，如果你经常一项不做完就切换到下一项，就算每个任务中途切换一次吧，那就意味着，8 小时的工作时间，你至少有 4 小时都花在任务切换上了。 这种应激式工作方式无疑是低效的，那什么才是高效的呢？统筹式工作。 真正的统筹式工作，有几个特征： ● 特征一，有计划地工作。 我通常周日晚上就会排好下周每天的工作，而每天早上会排好当天的工作。而且，任务清单在工作的时候一直开着、实时更新，完成一项删掉一项，临时增加一项就插入相应的时间段，当天完不成的、非紧急的任务，我就改成第二天的日期。 这种方式，会让自己很有掌控感，多少事情来了，都不会乱了阵脚。 当然，在做计划的时候，你需要为高价值问题分配最多专门的时间。我此前特地写过一篇文章，就提到，大部分人在 80% 的时间里都是做无用功，根本原因就是没搞清楚真正要解决的问题。 ● 特征二，形成自己固定的时间习惯。 比如我的习惯是，在上午做需要烧脑的事情、在交通工具上听书、在饭后效率不高的时候集中回复微信消息和留言、在等人的时候构思下篇文章主题、在疲劳的时候刷一下公众号、在傍晚的时候跟团队开会、在晚上做一个简单总结。 这种习惯，一方面把不同难度的工作跟自己的效率波峰波谷相匹配，达到效率最大化；另一方面，我会清楚地知道，5 分钟、10 分钟、30 分钟，对我来说分别可以干什么，这样就不会一有碎片时间，就习惯性地刷朋友圈了。 ● 特征三，及时记录、每天总结。 当你正在工作的时候，老板布置了一个任务、客户又来了一个问题，你会如何呢？很多人就直接扑到临时任务上去了，但真正好的做法是，如果不是十万火急，你可以快速用关键词记在笔记本上，不需要任何思考，然后马上回到刚才的任务，做完再看笔记本。 另外，你在一天当中，学到了什么、犯了什么错误，当时也要记下来，因为过了那个时候，你很快就会忘，然后继续犯这个错误。当然，这些记录，晚上都需要进行整理。 我曾说过，此前 8 年多的顾问生涯里，成长最快的那半年，我每天都坚持写工作日记。 另外，记录还有一个好处，就是可以减轻大脑负担。每天的例行工作、自己常犯的错误，这些都可以列清单。你的大脑是用来思考的，是很宝贵的，别把一支笔就可以做的事情，强加给你的大脑来做。 问题 3：几乎从不“偷懒” “懒癌”是第一生产力。仔细盘点一下，我们哪样创新不是因为懒呢？不想走路，有了汽车；不想爬楼，有了电梯；不想打扫，有了扫地机器人…… 工作中的大部分事情，并不是一次性的，而是持续的，那么就可以在第一次做的时候，搭好框架。 比如，我让运营每周做一次数据分析，这个事情是重复性的，所以高效的做法是： 建一张 excel 表格，把固定需要分析的参数都做好公式，每周只需要把导出来的源数据贴进去，刷新之后参数就出来，然后只需要看参数来得出结论。 当然，这里所说的偷懒，不仅是善用工具，还包括善用他人。 比如，你从来没做过数据分析，那么就先去找找前人怎么做的；比如，你有自己的团队或者实习生，那就不要做任何他们就可以做的事情；再比如，去运营社群，摸索出一套群主激励机制，比你自己去做群主，要高效得多。 所以，这三个让你 Work Smart 的工作方式，听起来难吗？一点也不，而且你很可能也听说过。但是，为什么很多人做不到呢？我观察下来，有几个障碍： ● 障碍 1：工作环境所限。 很多人的工作性质，就不是结果导向型的，而是任务导向型的。他的工作岗位要求他做的，就是完成任务，至于背后的出发点，不需要知道。而且，领导有可能就是考核努力、考核苦劳，而不是考核产出。 实际上，工作性质对一个人的思维方式、行为习惯的影响，大到超乎想象。 你去看，刚毕业的时候，一个学校一个专业的同学，看起来差不多，但过了几年，你会发现，只要接触一个人几分钟，听他说几句话，就能大致判断出他的职业。 再极端一些的，多年前我曾经因为要帮客户设计流程，去他们的产线观察生产过程，在噪音极大、灯光昏暗的厂房里，我看着流水线工人机械地盯着机器、等待换箱，几个小时下来，我自己也开始反应迟钝、敏锐度下降了。 ● 障碍 2：没有资深的人辅导。 从开头的案例可以看出，Google 工程师那么优秀的一群人，在从校园进入公司之后，也需要有经验的人辅导。 但很多公司并不像 Google 那样，重视对新人工作方式的培养，将 Work Smart 提到非常高的位置。 他们往往只重视教员工 What （需要做哪些事情、用什么工具等等），却没有 How （如何聪明地做这些事情）和 Why （这些事情对公司、对客户有什么帮助、要达到何种目的），导致员工的聪明才干发挥不出来，没有成就感。 ● 障碍 3：思维方式固化。 一部分人，会在工作多年之后，发现工作性质和工作环境的负面影响，醒悟过来想要改变。 然而，从学校踏入社会的这几年，是思维和工作方式形成的关键几年，如果任务导向、应激式努力、闷头蛮干的工作方式在大脑中固化了，形成了下意识思维，是很难扭转过来的。 我带过几个人，此前的工作经历都是任务式、应激式的，在跟他们合作的时候，的确能够感受到他们与自己固有思维作斗争的痛苦与挣扎，然而，并不是每个人最终都能挣扎出来、突破自我的。 所以，年轻时候的工作选择，你选择的不只是一份工作，而是一种思维习惯、工作方式、价值观甚至生活方式。 在初入职场的几年，处于何种工作环境、跟谁一起工作、被谁辅导工作，足以影响你的下半辈子。","categories":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/categories/人生/"}],"tags":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/tags/人生/"}]},{"title":"mac中配置环境变量","slug":"mac中配置环境变量","date":"2016-12-05T16:00:00.000Z","updated":"2018-10-18T15:33:27.413Z","comments":true,"path":"2016/12/06/mac中配置环境变量/","link":"","permalink":"http://wushuning.com/2016/12/06/mac中配置环境变量/","excerpt":"","text":"mac修改环境变量修改当前用户环境变量以配置tomcat为例 打开终端：输入如下指令 1wangzhikuiMacBook-Pro:~ wangzhikui$ vi .bash_profile 编辑.bash_prifile文件 在英文输入下按i ，进入编辑状态输入如下 12345678910111213141516export PATH=/Users/wangzhikui/develop/tomcat8.0.39/bin:$PATH:export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Homeexport CLASSPAHT=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=$JAVA_HOME/bin:$PATH:export PATH=/usr/local/mysql/bin:$PATH:export M2_HOME=/Users/wangzhikui/develop/apache-maven-3.3.9export PATH=$M2_HOME/bin:$PATH:export PATH=/Applications/Sublime\\ Text.app/Contents/SharedSupport/bin:$PATH:export PATH~ ~ ~ ~ ~ ~ &quot;.bash_profile&quot; 9L, 465C 按esc键后 输入 :wq 保存退出 配置完后退出终端再打开即可在终端中直接输入tomcat的启动，停止命令","categories":[{"name":"mac","slug":"mac","permalink":"http://wushuning.com/categories/mac/"}],"tags":[{"name":"mac","slug":"mac","permalink":"http://wushuning.com/tags/mac/"}]},{"title":"前端技术选型yyy-1.0","slug":"前端技术选型yyy1","date":"2016-05-23T16:00:00.000Z","updated":"2018-10-23T14:52:23.918Z","comments":true,"path":"2016/05/24/前端技术选型yyy1/","link":"","permalink":"http://wushuning.com/2016/05/24/前端技术选型yyy1/","excerpt":"","text":"前端技术选型一，AngularJS+BootStrap+RequireJSAngularJS 前端js框架，MVVM、模块化、自动化双向数据绑定、语义化标签、依赖注入http://www.apjs.net/ http://docs.angularjs.cn/api BootStrap。Css/html框架，前端UI类库http://bootstrap.evget.com/ http://v3.bootcss.com/ RequireJS。Js模块化按需加载工具，遵循AMD提前加载http://www.requirejs.cn/ http://requirejs.org/ 模块化定义规范AMD与CMD http://www.zhihu.com/question/20351507/answer/14859415 特点：angularjs新的前端设计思想，将后端MVC，依赖注入前置，本身就是一套完整的前端mvc架构 前端js单元测试框架QUnit, Mocha 或者 Jasmine 二，Jquery+Bootstrap+RequireJS特点：主流前端开发思想，简单，上手快，对于前端功能不复杂的情况非常实用 三， React + Redux + RequireJS + jQuery(或Zepto) + UIKit(或Bootstrap、SUI)+ReactRouter(单页面路由器框架)React技术背景：Facebook于13年发布的开源框架，技术针对模型层和数据层，地址： http://facebook.github.io/react/ React技术特点： 采用虚拟DOM技术，可以高效率进行DOM渲染； 组件化组装式开发模式，简单高效； 单向数据流，数据维护简单； 支持JSX； 支持数据渲染； 可以采用后端JS开发模式。 其他技术介绍： Redux：数据层框架，采用事件模型进行数据维护，在数据复用和数据同步方面优势明显。 RequireJS：按需加载JS Zepto：移动端使用的jQuery替代技术 UIKit：前端UI框架，类似于Bootstrap，技术成熟，使用相对简单； SUI：移动端UI框架，淘宝团队开发，采用iOS风格；新框架，迭代很快，几天一个版本，坑比较少 ReactRouter：针对ReactJS的单页面框架 ES6支持：可以使用ES6语法进行开发，生产环境使用Babel等转义到ES5运行。 浏览器支持情况：IE8+ 学习成本：主要学习成本在于React、Redux和jQuery。React API很简单，入手大概1.5天；Redux学习成本大概一天。 技术成熟度：技术成熟，背景比较强大，很多互联网公司的产品正在逐步迁移到React，比如美团、乐视、阿里等；基于React的React Native，是Facebook 15年刚发布的移动开发开源技术，现在国内已经有部分APP在尝试了。 其他 IDE：intellj idea webstorm 包管理：nodejs，npm，bowerBower:https://segmentfault.com/a/1190000002971135 代码结构：angular-seed，yeoman，自定义 参考：http://angularjs.cn/A04g 测试：karma，jasmine 构建：grunt","categories":[{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/categories/研发管理/"}],"tags":[{"name":"研发管理","slug":"研发管理","permalink":"http://wushuning.com/tags/研发管理/"}]},{"title":"个人日常网址","slug":"个人常用网址","date":"2015-12-31T16:00:00.000Z","updated":"2018-10-22T09:06:26.772Z","comments":true,"path":"2016/01/01/个人常用网址/","link":"","permalink":"http://wushuning.com/2016/01/01/个人常用网址/","excerpt":"","text":"前端微信公众号平台 koa koa中文 阿里egg vue react angular 2017 github starts nodejs web前端导航 hexo中文 后端importnew 后端源码 docker 社区gitbook github 掘金 开源中国 ibm segmentfault infoq 极客帮 iTeye CSDN 知乎 stackoverflow verycd 微博 豆瓣 鸟哥笔记 新榜 人人都是产品经理 develper-apple cocoachina swift 可视化datav 网易有数 百度sugar tableau 个人博客廖雪峰 阮一峰 线上教学慕课 网易公开课 传智播客 浪曦网 浪曦在线 极客学院 其他亚马逊 京东 12306 readfree 百度 小调网 爱奇艺 爱羽客 网速测试 在线作图 懒人图库 免费模版 8Isp空间 jhost 谷歌翻译 yonyou用友友空间 UDN uapcloud 敏捷开发平台 云音jira 云音协作 git yonyou qiyeyun_gitbook 友云音文档","categories":[{"name":"前端","slug":"前端","permalink":"http://wushuning.com/categories/前端/"}],"tags":[{"name":"前端","slug":"前端","permalink":"http://wushuning.com/tags/前端/"}]},{"title":"Java原生实现分页方案","slug":"java原生实现分页方案","date":"2015-05-28T16:00:00.000Z","updated":"2018-10-30T09:27:49.489Z","comments":true,"path":"2015/05/29/java原生实现分页方案/","link":"","permalink":"http://wushuning.com/2015/05/29/java原生实现分页方案/","excerpt":"","text":"两种分页方式 截取lisit 生成特定分页sql（不同数据库分页sql不同） 方案一 截取list截取list，针对后台查询出来的list数据，前台传入当前页currentPage，每页记录数numPerPage,从而计算出当前页的起始和终止下标，截取list返回前台。 实现： PaginationInfo 分页信息对象 PaginationUtil 分页工具类，传入原始全量list，根据前台传入的页码每页数据量进行截取 如下关键代码 1234567891011121314151617181920212223if(\"pagedemo\".equals(action))&#123;//每页显示数据条数 int numPerPage = 5; //要显示的页int currentPage = Integer.parseInt((String)request.getParameter(\"currentPage\")); StringBuffer json = new StringBuffer(); List&lt;UserVO&gt; list = new ArrayList&lt;UserVO&gt;(); try &#123; //要显示的所有数据 list = userMngService.queryAllUser(); //第一种分页方式，先取所有list，然后截取list分页 PaginationUtil&lt;UserVO&gt; paginationUtil = new PaginationUtil&lt;UserVO&gt;(); PaginationInfo&lt;UserVO&gt; paginationInfo = paginationUtil.listDataProcess(list, numPerPage, currentPage); //要显示的数据 list = paginationInfo.getResultList(); json.append(\" &#123;\\\"total\\\":\"); //数据总数 json.append(paginationInfo.getTotalPages()); json.append(\",\\\"rows\\\":[ \"); for(int i = 0;i&lt;list.size();i++)&#123; . . . . . . &#125; 步骤： 获取前台传参数当前页currentPage, 设置分页规则：每页记录数 获取要显示的所有数据信息list 使用工具类PaginationUtil截取list。返回PaginationInfo对象 PaginationInfo对象中包含了结果relustList页码，总记录数等信息，根据需要取得数据返回json到前台。 方案二 特定分页sql 在需要进行分页处理的DMO类中使用JdbcPaginationDelegator代理类处理，使用PaginationInfo对象存储数据信息。结果list，总页数等示例:123456789/** * 查询所有用户信息 分页 * @param currentPage 当前页 * @param numPerPage 每页显示数据条数 * @return */ Public PaginationInfo&lt;UserVO&gt; queryUserByPageInfo(int currentPage,int numPerPage)&#123; 。。。。 &#125; 步骤： 创建基本查询sql 12StringBuffer sql = new StringBuffer();sql.append(\"select * from ump_user where dr = ?\"); 创建分页信息对象，分页工具代理，如需sql参数创建sql参数对象SQLParameter，如果没有则传null 1234567//分页信息PaginationInfo&lt;UserVO&gt; pagenationInfo = new PaginationInfo&lt;UserVO&gt;();//jdbc分页代理对象JdbcPaginationDelegator&lt;UserVO&gt; delegate = new JdbcPaginationDelegator&lt;UserVO&gt;();//sql参数信息SQLParameter param = new SQLParameter();param.addParam(0); 使用代理对象初始化分页信息 123//使用代理对象初始化分页信息，代理类中会计算总记录数，但是不会执行分页sql，因为很多没有使用元数据没有，vo和数据表的映射//所以没法自动的将rs生成vo，所以，代理只是生成分页特定数据库的分页sql语句，由调用对象自行执行。pagenationInfo = delegate.initPaginationInfo(sql.toString(), param, currentPage, numPerPage); 执行代理类生成的分页SQL 1234//执行代理类生成的分页查询sqlstmt = conn.prepareStatement(paginationInfo.getPageSql());stmt.setInt(1, 0);rs = stmt.executeQuery(); 两种方式对比：两种方案的优劣比较明显，截取list每次都要全查出来，如果list的数据量非常大每次全查耗时较多，可考虑方案二，但是，此方案改动的代码量少，只需要在action加几行代码处理即可。 使用分页sql，方案效率较高，每次只取需要的数据，劣势在于需更改的代码较多，同时如果涉及到多次联查取综合数据的场景则此方案无效，只能使用方案一。","categories":[{"name":"java","slug":"java","permalink":"http://wushuning.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://wushuning.com/tags/java/"}]},{"title":"oracle中批量执行sql时候，出现异常ArrayIndexOutOfBoundsException","slug":"oracle中批量执行sql时候，出现异常ArrayIndexOutOfBoundsException","date":"2015-03-16T16:00:00.000Z","updated":"2018-10-18T15:36:23.754Z","comments":true,"path":"2015/03/17/oracle中批量执行sql时候，出现异常ArrayIndexOutOfBoundsException/","link":"","permalink":"http://wushuning.com/2015/03/17/oracle中批量执行sql时候，出现异常ArrayIndexOutOfBoundsException/","excerpt":"","text":"问题说明使用jdbc接口PreparedStatement.executeBatch()向oracle中批量执行sql时候，出现异常ArrayIndexOutOfBoundsException，具体信息如下：12345 [java] view plaincopyprint?1. java.lang.ArrayIndexOutOfBoundsException: -32413 2. at oracle.jdbc.driver.OraclePreparedStatement.setupBindBuffers(OraclePreparedStatement.java:2672) 3. atoracle.jdbc.driver.OraclePreparedStatement.executeBatch(OraclePreparedStatement.java:10688) 4. atcom.keyi.xxx.dal.xx.importFile(PublicCustomerImportDao.java:107) 问题分析The 10g driver apparently keeps a global serialnumber for all parameters in the entire batch,with a “short”variable. So you can have at most 32768 parameters in the batch.I was havingthe same exception because I have a INSERT statement with 42 parameters and mybatchescan be as big as 1000 records, so 42000 &gt; 32768 and this overflowsto a negative index.I reduced the batch factor to 100 to be safe, and all iswell.I guess your update DML should have a larger number of parameters perrecord,right? (My diagnostic of the bug is just deduction from the symptoms) 网上查找原始帖子地址为：https://community.oracle.com/thread/599441?start=15&amp;tstart=0 大体的意思是，oracle的preparedStatement批量执行sql时，对参数个数是有上限的（针对不同版本的oracle驱动，这个上限对不同的可能是不同的）这个参数个数的含义指addBatch的次数每条sql中的参数个数。对于Oracle 10g的驱动来说，这个值可能是32768，所以编程时，addBatch的次数每条sql中的参数个数应该小于这个值，否则报错。 按照这个思路，将addBatch的数量减少，使每次executeBatch的参数值小于32768，发现异常解决。","categories":[{"name":"oracle","slug":"oracle","permalink":"http://wushuning.com/categories/oracle/"}],"tags":[{"name":"oracle","slug":"oracle","permalink":"http://wushuning.com/tags/oracle/"}]},{"title":"2014工作总结","slug":"工作总结2014","date":"2015-02-02T16:00:00.000Z","updated":"2018-10-30T09:04:44.214Z","comments":true,"path":"2015/02/03/工作总结2014/","link":"","permalink":"http://wushuning.com/2015/02/03/工作总结2014/","excerpt":"","text":"一、14年简单工作回顾13-14年度是忙碌而充实的一年 组员离职 角色转换 ump平台 14年初短时间内两位组员同时离职，工作强度，工作压力骤然增加，有过犹豫。挑战与机遇并存，一个很好的机会展现自己的能力14年是不同寻常的一年，梦想是美好的，现实是残酷的，高强度的工作，周围环境的压力，充满诱惑的外界环境，来自同学朋友的压力，坚持自己的选择有时候并不是一件容易的事。很庆幸能够一直坚持到现在。也很庆幸得到了很多人的支持帮助。 14年，有机会出任开发经理，新的起点，新的平台，新的挑战，近一年下来，感觉很有意思，站在另一个高的起点去看待问题是一个很有意思的事情。当然也体会到了开发经理并不是那么容易的事，要考虑的事情非常多，要做的事情非常多，压力非常大，因为责任。所有的问题止于我们部门，而所有的问题应该止于开发经理。以前当碰到疑难问题时可以找自己的导师，开发经理，而现在，不仅没人找还要被人找。对于新人要去观察每个人的特点给予不一样的安排，尽量让他们发挥自己的特长，给他们创造机会。总的来说，很有意思。 14年，另外一个重大的项目ump平台。很有意思的一个平台，很有意思的团队，10几个人一起开发，很难想象最终还是做出来一个东西。 二、关于部门工作氛围来部门快三年了，部门的氛围依然和谐，但少了很多乐趣，少了很多交流，也许是部门大了。三大部门就像是公司的一个缩影，大家不知道自己在做什么，整天除了改bug就是改bug，刷问题数，部门之前的交流与沟通，就好比公司大部门之前的交流一样晦涩。很多人没有项目经验，在ump项目出现的时候没有人上心去做这样一个事情，我想肯定很多人是被迫参与，很多人并没有把项目当做一个真正的商用项目来做，学生气太重，很多人参与进来是想有人带，想有人交他怎么做，这种想法本身就是一个错误。 我想很多人没有自己的计划和想法，面对着外面互联网的大环境，很心动，但是没有信心走出去，这也是一种病态的表现。 人们总是误解一些东西，互联网最重要的是什么，我想是互联网思维。而不是你是否在一家互联网公司，做移动，商城，o2o才是互联网？我想不是。互联网核心是专注，极致，口碑，快。而最最核心的就是快。所以我们需要做的是改变我们的工作习惯和工作节奏，提升效率，提高竞争，加速响应。每个人都应该改变思想，把当下的环境变成互联网节奏的环境。提高精气神。我想留住部门人员的原因不仅仅是部门和谐的氛围，更是工作中的成就感。 三、关于现有的工作流程目前的支持网流程从刚加入公司就这样，一直没有变化，顾问，支持换了几波人了，问题大家都清楚了，但是没有人去改变，也很难改变。期待今年的变动能够改变现有的情况。问题很明显，能力不均等，团队不够完整。各自没有做好自己的事情。我想在这方面我的工作作风是强硬的，甚至有点怨气，但是适者生存。 我在意pbc考核，跟钱过不去那是傻蛋，但是也不在意pbc考核，部门的考核是公平的也是不公平的，没有什么是绝对公平的，我曾说过如果我想刷pbc可以刷的很好看，但是没有什么意义，部门有刷pbc的现象，不过没关系，这也是一种能力，只要大的环境是公平的就可以了，所以还是很佩服老大。我这样的做法想法，也用到的团队管理中。大家做好自己的本职工作，同时发展各自的能力，让你有能力走出公司。不要过分在意pbc考核，尤其不要在意反复率，很多支持，顾问，经常无理由的退回问题，也有很多之前知道开发反复率，故意用这个刁难。我说过我的做法是强硬的，直接退回不与解决。脾气就是这样，谁没有点脾气。是谁的问题就是谁的问题，我没有义务帮你解决，有时间我看看书，听听音乐挺好，发呆也比帮一个小白强，因为不是我的工作。 这就是大环境，适者生存。 我们每个研发都是逼出来的，顾问，支持一句不会，总部所有研发，服务都都得帮弄完。why？ 权责分明是最好的解决方案。大家明确自己的工作，可以不会，但是不要不会的理所当然，我们研发也一样。 四、pbc考核关于考核，我们部门的考核是透明而公平的，这一点让所有人信服，但是也是让人很难受的.我们都知道，考核跟工作方向是矛盾的，工作越努力，系统就越完善，问题就越少，pbc就会下降。这样就没了成就感。 我想是否可以在问题数和处理时间上取某种平均值来衡量，考虑所有问题的平均量，比如：所有问题的平均处理时间（举例而已）而不要考量问题的量，大家就会积极的使自己负责的模块稳定，更愿意出通版，尽量让问题量下来，让更多问题止于网上搜索平台不要到我们这里来，这样我们也可以做跟多有意义的事情，比如解决疑难问题，而不是很多人在没有问题的时候反而恐慌 关于疑难问题，刚开始提的时候疑难问题是很正轨的，但是现在慢慢的又变成了刷分的工具，当然大部分是含金量很高的，但有的就不尽然，比如很多疑难问题很多人处理好几次，好几个点，像这样的解决就只能算一次，并且上一次的解决加入的工作量需要相应扣减，因为这种情况上一次就是没有解决彻底。 另外，确定疑难问题需要严格公示，现在太随意，我们既然要把疑难问题推到别的部门去说，而且要上创新，就应该规范化，让疑难问题的确定必须是疑难问题。而不是我这个月初提的疑难问题，下一个月另外一个同事一下就解决了，这就不能算。谁提的疑难问题，要严格说明整个问题的现象，还要说明提交人自己分析，甚至开发经理部门经理对整个业务场景，代码场景的分析情况。 对于疑难问题分级，这个提议我想很有必要，也很有意义，另外疑难问题评审匿名投票很有必要。 五、关于流程扁平化扁平化是必然的趋势，在互联网时代，快，是立足之本，研发运营一体化的根本在于研发参与运营，让研发直接了解客户的需要，不要蒙头苦干，研发出来的产品，功能没人用，有什么意思。公司一直在做这样的事。当有客户提出一个个性化需求，而我们分析这个需求有意义，但是没人响应，我想我们要做的是立马成立项目组调研我们能调研的客户，询问是否需要这样的功能，如果超过一定百分比需要，我们应该在最短时间内做出来，作为一项功能去推广，可以签二开小合同，我想这才是互联网思维，而不是说，我要在下一个版本实现。 公司的流程且不讨论，三大部门内部首先要做到扁平化，所有人之间不应该有职位之分，谁能更好的解决问题我们就应该找谁沟通，以最快的有效的方式得到我想要的答案提供给客户，是我们应该做的，而不是先找普通开发，不会再找开发经理，再不会再找部门经理，最后开发经理跟部门经理得作用只是帮大家协调部门之间的交流协作，这样才是最好的效果。 六、关于个人发展在部门，个人的发展是比较慢，就像人力评级，三年才能评高级，5年才能评专家也是不无道理，人的成长太慢。个人理解，一个人在一个岗位上完全适应，对于有工作经验的人来说，不用一年，对于没有工作经验的人来说顶多两年。如果不能胜任那就得辞退了，但是在公司技术的响应已经很落后了，一个人也许真的要三年才能解除很多核心技术。而且打的氛围很容易让人迷失，如果自制力不强，很容让你随大流。所谓的幸福企业，不仅仅是归属感，更是成就感，公司整个大环境已经没有了。 所以我时刻提醒团队的成员，让自己忙起来，在改问题至于有部门别的事情做，所以ump平台是一个很好的契机。 七、关于挑战成就感来源于挑战，我们的工作有挑战吗？有，也没有，整天改bug有什么挑战。 所以我想我们首先要改变大家的想法，改bug有很多种，一种是真的改bug，一种是重构。我们应该要用重构的思维去看代码，读别人的代码，而不是用改bug的思维去改bug。读别人的代码是很有意思的事情，就像我经常重写自己以前的系统，以前觉得很牛逼的写法，现在回头看真的烂得一塌糊涂。 当有一天有能力去重构nc的代码，我想这个时候才是真的牛b的时候，当然，不是想当然的重构。 我们工作中发现了很多问题，代码没注释，废代码，接口定义不明确，没有文档，开发交接不规范，但是我们也没有去做这些事，当然我也没有，这受制于pbc考核，因为花时间去总结这些还不如多改几个问题，这是普遍的情况。 八、关于pbc考核的个人发展项目pbc考核中有一项个人发展，我想这一项很有必要，经过这几年的讲座还是留下了很多资料，比如网报，两次业务，两次代码，足够新人在短时间了解。今年因为ump所以搞得比较仓促而已。当然问题是有，评分不够规范，有的人讲的好，分数确很低。有的人讲的一般，但是评分的都是熟人，分数就很高。 我想今年是否可以考虑项目组的情况，鼓励大家做项目，任何想做的项目都可以，当然与工作相关的更好，比如，邮件定时发送平台，git统计平台等，都可以作为实际的项目来做，大家平时任何时候，任何人都可以提出自己的项目，自己各自拉虚拟团队，写立项书，项目规划书，开发经理，部门经理，老大，牵头成立专门的评审委员会。评审通过的项目组成立。各自开发，在规定的时间内交付，搭建服务器给全部门使用，部门大会项目展示，按项目组评分，对于优秀的项目现金奖励，对于特别出彩的项目，可以邀请集团领导参加。 部门可申请专门的服务器资源，git资源等给各个项目组，每个项目组前期立项要完全按照实际商用项目运作，包括人员，时间安排，里程碑，交付文档等。 对于没有进入项目组的成员，仍然可以搞pbc讲座，但是需要要求，必须听讲座的人中有其他组，其他部门的人占的比例。这个需要讲座的人自己邀请，如果觉得自己影响力足够也可以直接发全员邮件，但是如果现场听的人比例不够，必须取消。打分需要匿名，现场听完现场打，安排非组员统计分数。 十、15年的工作建议15年希望能极大限度的改变现有的情况 pbc考核问题量的模式改变成平均量的模式 个人发展改成项目组的模式 疑难问题增加等级，提高疑难问题进入的门槛，增加提交人，组的详细分析说明 鼓励大家公事公办，权责明确，不要把时间花在不该花的地方 平时多组织活动，提高交流，部门内，部门间， 增加悬赏，鼓励大家做讲座开源架构使用，讲座人自己组织，邀请别人参加，参会人评级。奖励现金 50,100,150 增加新人交流机制，新人加入部门除了汇报，还需要组织座谈单人或者多人一起做主持人介绍自己，可以向受邀的人提问同时邀请本部门及其他想要邀请的人参加包括老大。 除了大部门联络员，每个部门需要增设单独的部门内联络员，定期制定活动方案，比如ktv，滑雪等供大家选择，当然。。。自费。时间可以是每月一次，或者两次，由总联络员定，可以跟其他部门联谊，甚至其他公司。 成立创新小组挖掘部门内的创新点，提交集团，可又部门联络员带组。（比如疑难问题悬赏模型可以作为一种管理模式提交创新平台评审，文案总结提交可由创新小组负责，这个小组可以作为个人发展中的一个项目组。也可以立项，说明自己的计划。） ump成立专门的小组，建议6人，一个负责人，一个项目经理，4个开发，真正的互联网项目运作，每天一报，快速开发。 疑难问题匿名评审 疑难问题增加连带机制，一个问题多个点，上一次解决加分相应扣减，或者本次评定加分级别降级","categories":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/categories/人生/"}],"tags":[{"name":"人生","slug":"人生","permalink":"http://wushuning.com/tags/人生/"}]},{"title":"E440等预装Linux系统(或win8系统)改win7系统的心得","slug":"E440等预装Linux系统-或win8系统-改win7系统的心得","date":"2014-07-23T16:00:00.000Z","updated":"2018-10-18T15:21:38.383Z","comments":true,"path":"2014/07/24/E440等预装Linux系统-或win8系统-改win7系统的心得/","link":"","permalink":"http://wushuning.com/2014/07/24/E440等预装Linux系统-或win8系统-改win7系统的心得/","excerpt":"","text":"前几天刚入了一个E440，收到货开机才发现竟然是Linux版本的，只好自己动手更换系统，当中搜了不知多少帖子，从中午12点开始一直忙到22点，终于在最后看到了熟悉的win7登陆界面，特此分享，免得和我有一样情况的同学走歪路。当然最简单的方式是入一张win7的安装盘通过光驱安装，但苦于我没有任何安装光盘，所以使用了U盘安装的方式。PS:此方法同样适用于win8想更换成win7的用户 一、准备阶段1、一个4G大小的U盘 2、从网上下好你想要使用的win7系统（ghost版本亦可） 3、网上下好老毛桃版本的U盘制作器 4、网上下好分区工具diskgenius（注意一定要是专业版的，最好是绿色免安装版） 注：为了以免大家以为我是托或者有病毒，所以在此都不上链接，大家一般都可以通过百度第一页搜到 5、根据老毛桃的提示，把U盘制作成WINPE U盘启动器，并在U盘中拷入win7系统和dskgenius 6、下载好E440的驱动软件（联想thinkpad官方下载，至少把上网驱动下好） 7、记得以上所有软件如果初始状态时压缩包的话都必须解压完成（ISO系统除外） 二、BIOS阶段1、重启后按F1进入BIOS阶段 2、如果直接按F12通过U盘进WINPE系统，你会发现根本读不出硬盘，这是因为thinkpad的BIOS中设置成这样的， 我们需要对BIOS进行修改。具体步骤可以参见http://think.lenovo.com.cn/htmls/knowledge/detail_20131119161402965.html（联想官网，放心点击） 三、WINPE阶段1、根据上一步完成BIOS设置后，就可以重启并按F12进WINPE系统了。进去后系统直接提示你安装你放入U盘中的系统，别睬它，点击关闭。 2、还记得我让你拷进U盘中的diskgenius专业版么？拷进电脑硬盘中，并双击打开。在左边窗口点击硬盘，你会发现初始的硬盘只有一个分区，而且是GUID格式（简称GPT），而win7和win PE的默认方式是MBR，所以如果不对硬盘模式进行转换是无法安装win7的。点击硬盘，选择上面的“硬盘”——“转换分区表类型为MBR格式”，转换完成后，格式化整个硬盘，然后根据自己的需求快速分区（一般2个就够了，一个系统25G，另一个就是剩下的），最后点击“硬盘”——“重建主引导记录（MBR）（M）”。 3、以上步骤全部完成后，重启电脑，并重新进入WINPE，根据提示运行GHOST安装系统，完成后重启电脑（拔掉U盘吧，没用了）， 这个时候就会看到久违的win7系统启动图标。 四、WIN7阶段1、根据提示安装好可以安装的所有驱动，可能会发现上网驱动没有安装成功，还记得我在准备阶段让你们下载的上网驱动么？装好它你就可以上网了。 2、最后根据自己的需求安装软件，包括最新的补丁等等。 Enjoy it!","categories":[{"name":"系统","slug":"系统","permalink":"http://wushuning.com/categories/系统/"}],"tags":[{"name":"系统","slug":"系统","permalink":"http://wushuning.com/tags/系统/"}]},{"title":"sqlserver系统函数把int类型的1显示为char类型的001","slug":"sqlserver系统函数把int类型的1显示为char类型的001","date":"2014-01-05T16:00:00.000Z","updated":"2018-10-30T08:13:47.173Z","comments":true,"path":"2014/01/06/sqlserver系统函数把int类型的1显示为char类型的001/","link":"","permalink":"http://wushuning.com/2014/01/06/sqlserver系统函数把int类型的1显示为char类型的001/","excerpt":"","text":"to_char(1, ‘000 ‘)函数1select to_char(1, '000 ') from demo 1select right( '00 '+cast(CustomerID as varchar(3)),3) from ... right((10000+字段名),3)就是3位的. 支持可以处理得简单些：1select right( '00 '+cast(CustomerID as varchar(3)),3) from ...","categories":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/categories/SQLServer/"}],"tags":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/tags/SQLServer/"}]},{"title":"关闭浏览器注销session","slug":"关闭浏览器注销session","date":"2014-01-04T16:00:00.000Z","updated":"2018-10-30T08:04:34.011Z","comments":true,"path":"2014/01/05/关闭浏览器注销session/","link":"","permalink":"http://wushuning.com/2014/01/05/关闭浏览器注销session/","excerpt":"","text":"12345678910function window.onbeforeunload() &#123; if(event.clientX&gt;360&amp;&amp;event.clientY&lt;0||event.altKey) &#123; // window.event.returnValue=\"确定要退出登录吗？\"; var url = \"&lt;%=path%&gt;/pages/SessionEnd.jsp\"; var callback = processAjaxResponse; executeXhr(callback, url); &#125; &#125;","categories":[{"name":"web","slug":"web","permalink":"http://wushuning.com/categories/web/"}],"tags":[{"name":"web","slug":"web","permalink":"http://wushuning.com/tags/web/"}]},{"title":"tomcat-如何设置不用输入端口号和目录名就可以访问.md","slug":"tomcat-如何设置不用输入端口号和目录名就可以访问","date":"2014-01-03T16:00:00.000Z","updated":"2018-10-30T08:00:21.034Z","comments":true,"path":"2014/01/04/tomcat-如何设置不用输入端口号和目录名就可以访问/","link":"","permalink":"http://wushuning.com/2014/01/04/tomcat-如何设置不用输入端口号和目录名就可以访问/","excerpt":"","text":"场景一如果你的TOMCAT所在的机器纯粹就是只装TOMCAT作为JSP的服务器，那么将SERVE.XML文件里的默认端口号由8080改为80即可。此时不用输入端口号也能正确访问，而且地址栏也不会出现端口号。 场景二如果你的TOMCAT所在机器除了装TOMCAT运行JSP外，还有IIS同时也运行ASP的话，那么这个8080端口屏蔽不了。有文章介绍可以将TOMCAT和IIS结合，可以去掉端口号，但是在这种情况下JSP里的SESSION不能用，跳到下页SESSION值就丢失了。故一个比较不得以的办法就是使用页面跳转。具体做法是:在IIS下建一站点，该站点对应你的网站的域名。该站点下就一个文件index.htm： &lt;script language=vbscript&gt; window.location.href=\"http://xxx.xxx.xxx.xxx:8080\" &lt;/script&gt; 则别人在访问你的域名时就不用输入端口号。而由系统自己跳转到TOMCAT。但此刻在地址栏会出现8080，但也只好如此了。","categories":[{"name":"tomcat","slug":"tomcat","permalink":"http://wushuning.com/categories/tomcat/"}],"tags":[{"name":"tomcat","slug":"tomcat","permalink":"http://wushuning.com/tags/tomcat/"}]},{"title":"jsp-关于request和reponse退出时的位置定向问题","slug":"html图片滚动","date":"2014-01-02T16:00:00.000Z","updated":"2018-10-30T07:56:52.079Z","comments":true,"path":"2014/01/03/html图片滚动/","link":"","permalink":"http://wushuning.com/2014/01/03/html图片滚动/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;html&gt;&lt;body&gt;&lt;DIV id=demo style=\"OVERFLOW: hidden; WIDTH: 600px; HEIGHT: 190px;\"&gt; &lt;table border=\"0\" cellspacing=\"0\" cellpadding=\"0\"&gt; &lt;tr&gt; &lt;td valign=\"top\" id=demo1&gt; &lt;!-- 要循环滚动的图片 --&gt; &lt;table width=\"600\" border=\"0\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" &gt; &lt;tr&gt; &lt;td width=\"200\" height=\"150\" align=\"center\"&gt; &lt;img src=\"images/pic1.jpg\" width=\"194\" height=\"147\" border=\"0\" /&gt; &lt;/td&gt; &lt;td width=\"200\" align=\"center\"&gt; &lt;img src=\"images/pic2.jpg\" width=\"194\" height=\"147\" border=\"0\" /&gt; &lt;/td&gt; &lt;td align=\"center\"&gt; &lt;img src=\"images/pic3.jpg\" width=\"194\" height=\"147\" border=\"0\" /&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/td&gt; &lt;TD id=demo2 width=1&gt;&lt;/TD&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/DIV&gt; &lt;SCRIPT&gt; var speed=30//速度数值越大速度越慢 var demo2 = document.getElementById(\"demo2\"); var demo = document.getElementById(\"demo\"); var demo1 = document.getElementById(\"demo1\"); demo2.innerHTML=demo1.innerHTML function Marquee()&#123; if(demo2.offsetWidth-demo.scrollLeft&lt;=0) demo.scrollLeft-=demo1.offsetWidth else&#123; demo.scrollLeft++ &#125; &#125; var MyMar=setInterval(Marquee,speed) demo.onmouseover=function() &#123;clearInterval(MyMar)&#125; demo.onmouseout=function() &#123;MyMar=setInterval(Marquee,speed)&#125;&lt;/SCRIPT&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"jsp","slug":"jsp","permalink":"http://wushuning.com/categories/jsp/"}],"tags":[{"name":"jsp","slug":"jsp","permalink":"http://wushuning.com/tags/jsp/"},{"name":"servlet","slug":"servlet","permalink":"http://wushuning.com/tags/servlet/"}]},{"title":"jsp-关于request和reponse退出时的位置定向问题","slug":"jsp关于request和reponse退出时的位置定向问题","date":"2014-01-01T16:00:00.000Z","updated":"2018-10-30T07:55:01.070Z","comments":true,"path":"2014/01/02/jsp关于request和reponse退出时的位置定向问题/","link":"","permalink":"http://wushuning.com/2014/01/02/jsp关于request和reponse退出时的位置定向问题/","excerpt":"","text":"12345678910111213&lt;%@page contentType=\"text/html;charset=gb2312\" import=\"java.util.*\"%&gt;&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;&lt;html&gt;&lt;head&gt; &lt;meta content=\"text/html; charset=gb2312\"&gt;&lt;body&gt; &lt;% request.getSession().invalidate(); //request.getRequestDispatcher(\"/index.jsp\").forward(request, response);用这个logout后不能刷新 response.sendRedirect(\"/research/index.jsp\"); %&gt; &lt;/body&gt;&lt;/html&gt; 如果是这样的话 request.getRequestDispatcher(“/index.jsp”).forward(request, response); 这条语句跳到index.jsp页面后 如果刷新则会出现一下异常12345678910111213141516171819202122232425262728293031323334HTTP Status 500 - --------------------------------------------------------------------------------type Exception reportmessage description The server encountered an internal error () that prevented it from fulfilling this request.exception org.apache.jasper.JasperException: An exception occurred processing JSP page /admin/logout.jsp at line 96: &lt;body&gt;7: &lt;% 8: request.getSession().invalidate();9: request.getRequestDispatcher(\"/index.jsp\").forward(request, response);10: //response.sendRedirect(\"/research/index.jsp\");11: %&gt; 12: &lt;/body&gt;Stacktrace: org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:505) org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:410) org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342) org.apache.jasper.servlet.JspServlet.service(JspServlet.java:267) javax.servlet.http.HttpServlet.service(HttpServlet.java:717) com.fitler.bean.Filter_Login.doFilter(Filter_Login.java:42) com.fitler.bean.Filter_chinese.doFilter(Filter_chinese.java:21)root cause java.lang.IllegalStateException: Cannot forward after response has been committed org.apache.jsp.admin.logout_jsp._jspService(logout_jsp.java:63) org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70) javax.servlet.http.HttpServlet.service(HttpServlet.java:717) org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:374) org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342) org.apache.jasper.servlet.JspServlet.service(JspServlet.java:267) javax.servlet.http.HttpServlet.service(HttpServlet.java:717) com.fitler.bean.Filter_Login.doFilter(Filter_Login.java:42) com.fitler.bean.Filter_chinese.doFilter(Filter_chinese.java:21)note The full stack trace of the root cause is available in the Apache Tomcat/6.0.18 logs. 使用response.sendRedirect(“/research/index.jsp”);重定向过去就没有这个问题，问题解决，但是还未具体研究为什么","categories":[{"name":"jsp","slug":"jsp","permalink":"http://wushuning.com/categories/jsp/"}],"tags":[{"name":"jsp","slug":"jsp","permalink":"http://wushuning.com/tags/jsp/"},{"name":"servlet","slug":"servlet","permalink":"http://wushuning.com/tags/servlet/"}]},{"title":"SQLServer-企业管理器无法打开","slug":"tomcat多项目配置","date":"2013-12-31T16:00:00.000Z","updated":"2018-10-30T07:51:25.752Z","comments":true,"path":"2014/01/01/tomcat多项目配置/","link":"","permalink":"http://wushuning.com/2014/01/01/tomcat多项目配置/","excerpt":"","text":"1234567&lt;host&gt;...&lt;Context path=\"/NCRE\" docBase=\"d:/NCRE\" debug=\"5\" reloadable=\"true\" crossContext=\"true\"&gt;&lt;/Context&gt;..&lt;/host&gt; tomcat配置文件servlet.xml path=””为url上输入的地址 如 http:localhost:8080/NCRE docBase=””为项目的绝对路径， 若想配置多个项目 只需增加 即可","categories":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/categories/SQLServer/"}],"tags":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/tags/SQLServer/"}]},{"title":"javascript捕获窗口关闭事件有两种方法","slug":"javascript捕获窗口关闭事件有两种方法","date":"2013-01-09T16:00:00.000Z","updated":"2018-10-30T06:47:29.330Z","comments":true,"path":"2013/01/10/javascript捕获窗口关闭事件有两种方法/","link":"","permalink":"http://wushuning.com/2013/01/10/javascript捕获窗口关闭事件有两种方法/","excerpt":"","text":"用javascript重新定义 window.onbeforeunload() 事件在javascript里定义一个函数即可12345678910function window.onbeforeunload() &#123; alert(\"关闭窗口\")&#125;//alert()事件将会在关闭窗口前执行，你也可以用户决定是否关闭窗口function window.onbeforeunload() &#123; if (event.clientX&gt;document.body.clientWidth &amp;&amp; event.clientY&lt;0 ||event.altKey) window.event.returnValue=\"确定要退出本页吗？\"; &#125; 用onUnload方法在body 标签里加入onUnload事件1body onUnload=\"myClose()\" 然后在javascript里定义myClose()方法但是onUnload方法是在关闭窗口之后执行，不是在关闭窗口之前执行，如果你想在关闭窗口之前做判断，请用第一种方法","categories":[{"name":"javascript","slug":"javascript","permalink":"http://wushuning.com/categories/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://wushuning.com/tags/javascript/"}]},{"title":"html-input-type-text 标签属性和方法","slug":"j2ee-5中mail包与使用的mail包冲突解决","date":"2013-01-06T16:00:00.000Z","updated":"2018-10-30T06:44:54.412Z","comments":true,"path":"2013/01/07/j2ee-5中mail包与使用的mail包冲突解决/","link":"","permalink":"http://wushuning.com/2013/01/07/j2ee-5中mail包与使用的mail包冲突解决/","excerpt":"","text":"1Exception in thread \"main\" java.lang.NoClassDefFoundError: com/sun/mail/util/LineInputStream 当出现以上错误时，恭喜您已经离接收邮件不远了，否则请您解决好所有的异常后再来看这个帖子。javax.mail和javax.activation这两个包已经在javaEE5当中属于基础包了，就是JDK中自带了已经，但是里面的方法与现在外面的mail.jar和activation.jar有一些出入，所以初学者在直接copy别人代码的时候往往会出现上面的错误。废话不多说下面是解决方法进到1X:\\Program Files\\MyEclipse 6.5\\myeclipse\\eclipse\\plugins\\com.genuitec.eclipse.j2eedt.core_6.5.0.zmyeclipse650200806\\data\\libraryset\\EE_5 这个路径里,可以看到javaee.jar,用rar把这个文件打开,然后进到javax文件夹里,删除mail.jar和activation.jar(我的javaee.jar里，这两个东西是文件夹，总之删掉就OK，不过要注意备份一下","categories":[{"name":"html","slug":"html","permalink":"http://wushuning.com/categories/html/"}],"tags":[{"name":"html","slug":"html","permalink":"http://wushuning.com/tags/html/"}]},{"title":"html-input-type-text 标签属性和方法","slug":"html-input-type-text标签属性和方法","date":"2013-01-05T16:00:00.000Z","updated":"2018-10-30T06:42:32.464Z","comments":true,"path":"2013/01/06/html-input-type-text标签属性和方法/","link":"","permalink":"http://wushuning.com/2013/01/06/html-input-type-text标签属性和方法/","excerpt":"","text":"ACCESSKEY accessKey 设置或获取对象的快捷键。 ATOMICSELECTION 指定元素及其内容是否可以一不可见单位统一选择。 AUTOCOMPLETE autocomplete 设置或获取对象的自动完成状态。 BEGIN begin 设置或获取时间线在该元素上播放前的延迟时间。 canHaveChildren 获取表明对象是否可以包含子对象的值。 canHaveHTML 获取表明对象是否可以包含丰富的 HTML 标签的值。 CLASS className 设置或获取对象的类。 clientHeight 获取对象的高度，不计算任何边距、边框、滚动条或可能应用到该对象的补白。 clientLeft 获取 offsetLeft 属性和客户区域的实际左边之间的距离。 clientTop 获取 offsetTop 属性和客户区域的实际顶端之间的距离。 clientWidth 获取对象的宽度，不计算任何边距、边框、滚动条或可能应用到该对象的补白。 CONTENTEDITABLE contentEditable 设置或获取表明用户是否可编辑对象内容的字符串。 DATAFLD dataFld 设置或获取由 dataSrc 属性指定的绑定到指定对象的给定数据源的字段。 DATASRC dataSrc 设置或获取用于数据绑定的数据源。 defaultValue 设置或获取对象的初始内容。 DIR dir 设置或获取对象的阅读顺序。 disabled 获取表明用户是否可与该对象交互的值。 DISABLED disabled 设置或获取控件的状态。 END end 设置或获取表明元素结束时间的值，或者元素设置为重复的简单持续终止时间。 firstChild 获取对象的 childNodes 集合的第一个子对象的引用。 form 获取对象所在表单的引用。 hasMedia 获取一个表明元素是否为 HTML+TIME 媒体元素的 Boolean 值。 HIDEFOCUS hideFocus 设置或获取表明对象是否显式标明焦点的值。 ID id 获取标识对象的字符串。 isContentEditable 获取表明用户是否可编辑对象内容的值。 isDisabled 获取表明用户是否可与该对象交互的值。 isMultiLine 获取表明对象的内容是包含一行还是多行的值。 isTextEdit 获取是否可使用该对象创建一个 TextRange 对象。 LANG lang 设置或获取要使用的语言。 LANGUAGE language 设置或获取当前脚本编写用的语言。 lastChild 获取该对象 childNodes 集合中最后一个子对象的引用。 MAXLENGTH maxLength 设置或获取用户可在文本控件中输入的最多字符数。 NAME name 设置或获取对象的名称。 nextSibling 获取对此对象的下一个兄弟对象的引用。 nodeName 获取特定结点类型的名称。 nodeType 获取所需结点的类型。 nodeValue 设置或获取结点的值。 offsetHeight 获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的高度。 offsetLeft 获取对象相对于版面或由 offsetParent 属性指定的父坐标的计算左侧位置。 offsetParent 获取定义对象 offsetTop 和 offsetLeft 属性的容器对象的引用。 offsetTop 获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置。 offsetWidth 获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的宽度。 onOffBehavior 获取表明指定的 Microsoft? DirectAnimation? 行为是否正在运行的对象。 outerHTML 设置或获取对象及其内容的 HTML 形式。 outerText 设置或获取对象的文本。 ownerDocument 设置或获取结点关联的 document 对象。 parentElement 获取对象层次中的父对象。 parentNode 获取文档层次中的父对象。 parentTextEdit 获取文档层次中可用于创建包含原始对象的 TextRange 的容器对象。 previousSibling 获取对此对象的上一个兄弟对象的引用。 READONLY readOnly 设置或获取表明对象内容是否为只读的值。 readyState 获取表明对象当前状态的值。 recordNumber 获取数据集中生成对象的原始记录。 scopeName 获取为该元素定义的命名空间。 scrollHeight 获取对象的滚动高度。 scrollLeft 设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离。 scrollTop 设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离。 scrollWidth 获取对象的滚动宽度。 SIZE size 设置或获取控件的大小。 sourceIndex 获取对象在源序中的依次位置，即对象出现在 document 的 all 集合中的顺序。 STYLE 为该设置元素设置内嵌样式。 SYNCMASTER syncMaster 设置或获取时间容器是否必须在此元素上同步回放。 SYSTEMBITRATE 获取系统中大约可用带宽的 bps。 SYSTEMCAPTION 表明是否要显示文本来代替演示的的音频部分。 SYSTEMLANGUAGE 表明是否在用户计算机上的选项设置中选中了给定语言。 SYSTEMOVERDUBORSUBTITLE 指定针对那些正在观看演示但对被播放的音频所使用的语言并不熟悉的用户来说是否要渲染配音或字幕。 TABINDEX tabIndex 设置或获取定义对象的 Tab 顺序的索引。 tagName 获取对象的标签名称。 tagUrn 设置或获取在命名空间声明中指定的统一资源名称(URN)。 TIMECONTAINER timeContainer 设置或获取与元素关联的时间线类型。 TITLE title 设置或获取对象的咨询信息(工具提示)。 TYPE type 获取或初始设置对象所代表的 input 控件类型。 uniqueID 获取为对象自动生成的唯一标识符。 UNSELECTABLE 指定该元素不可被选中。 VALUE value 设置或获取控件对象的显示值。当控件对象提交时此值将返回给服务器。 VCARD_NAME vcard_name 设置或获取对象的 vCard 值，以便用于自动完成框。 WIDTH width 设置或获取对象的计算宽度。 事件 描述 onactivate 当对象设置为活动元素时触发。 onafterupdate 当成功更新数据源对象中的关联对象后在数据绑定对象上触发。 onbeforeactivate 对象要被设置为当前元素前立即触发。 onbeforecut 当选中区从文档中删除之前在源对象触发。 onbeforedeactivate 在 activeElement 从当前对象变为父文档其它对象之前立即触发。 onbeforeeditfocus 在包含于可编辑元素内的对象进入用户界面激活状态前或可编辑容器变成控件选中区前触发。 onbeforepaste 在选中区从系统剪贴板粘贴到文档前在目标对象上触发。 onbeforeupdate 当成功更新数据源对象中的关联对象前在数据绑定对象上触发。 onblur 在对象失去输入焦点时触发。 onchange 当对象或选中区的内容改变时触发。 onclick 在用户用鼠标左键单击对象时触发。 oncontextmenu 在用户使用鼠标右键单击客户区打开上下文菜单时触发。 oncontrolselect 当用户将要对该对象制作一个控件选中区时触发。 oncut 当对象或选中区从文档中删除并添加到系统剪贴板上时在源元素上触发。 ondblclick 当用户双击对象时触发。 ondeactivate 当 activeElement 从当前对象变为父文档其它对象时触发。 ondrag 当进行拖曳操作时在源对象上持续触发。 ondragend 当用户在拖曳操作结束后释放鼠标时在源对象上触发。 ondragenter 当用户拖曳对象到一个合法拖曳目标时在目标元素上触发。 ondragleave 当用户在拖曳操作过程中将鼠标移出合法拖曳目标时在目标对象上触发。 ondragover 当用户拖曳对象划过合法拖曳目标时持续在目标元素上触发。 ondragstart 当用户开始拖曳文本选中区或选中对象时在源对象上触发。 ondrop 当鼠标按钮在拖曳操作过程中释放时在目标对象上触发。 onerrorupdate 更新数据源对象中的关联数据出错时在数据绑定对象上触发。 onfilterchange 当可视滤镜更改状态或完成转换时触发。 onfocus 当对象获得焦点时触发。 onfocusin 当元素将要被设置为焦点之前触发。 onfocusout 在移动焦点到其它元素之后立即触发于当前拥有焦点的元素上触发。 onhelp 当用户在浏览器为当前窗口时按 F1 键时触发。 onkeydown 当用户按下键盘按键时触发。 onkeypress 当用户按下字面键时触发。 onkeyup 当用户释放键盘按键时触发。 onlosecapture 当对象失去鼠标捕捉时触发。 onmousedown 当用户用任何鼠标按钮单击对象时触发。 onmouseenter 当用户将鼠标指针移动到对象内时触发。 onmouseleave 当用户将鼠标指针移出对象边界时触发。 onmousemove 当用户将鼠标划过对象时触发。 onmouseout 当用户将鼠标指针移出对象边界时触发。 onmouseover 当用户将鼠标指针移动到对象内时触发。 onmouseup 当用户在鼠标位于对象之上时释放鼠标按钮时触发。 onmousewheel 当鼠标滚轮按钮旋转时触发。 onmove 当对象移动时触发。 onmoveend 当对象停止移动时触发。 onmovestart 当对象开始移动时触发。 onpaste 当用户粘贴数据以便从系统剪贴板向文档传送数据时在目标对象上触发。 onpropertychange 当在对象上发生对象上发生属性更改时触发。 onreadystatechange 当对象状态变更时触发。 onresize 当对象的大小将要改变时触发。 onresizeend 当用户更改完控件选中区中对象的尺寸时触发。 onresizestart 当用户开始更改控件选中区中对象的尺寸时触发。 onselect 当当前选中区改变时触发。 onselectstart 对象将要被选中时触发。 ontimeerror 当特定时间错误发生时无条件触发，通常由将属性设置为无效值导致。 方法 描述 addBehavior 给元素附加一个行为。 appendChild 给对象追加一个子元素。 applyElement 使得元素成为其它元素的子元素或父元素。 attachEvent 将指定函数绑定到事件，以便每当该事件在对象上触发时都调用该函数。 blur 使元素失去焦点并触发 onblur 事件。 clearAttributes 从对象中删除全部标签属性和值。 click 触发 onclick 事件来模拟单击。 cloneNode 从文档层次中复制对对象的引用。 componentFromPoint 通过特定事件返回对象在指定坐标下的位置。 contains 检查对象中是否包含给定元素。 createTextRange 为元素创建一个 TextRange 对象。 detachEvent 从事件中取消指定函数的绑定，这样当事件触发时函数就不会收到通知了。 dragDrop 初始化拖曳事件。 fireEvent 触发对象的指定事件。 focus 使得元素得到焦点并执行由 onfocus 事件指定的代码。 getAdjacentText 返回邻接文本字符串。 getAttribute 获取指定标签属性的值。 getAttributeNode 获取由 attribute.name 属性引用的 attribute 对象。 getBoundingClientRect 获取指定 TextRectangle 对象集合绑定的对象。 getClientRects 获取描述对象内容或客户区内布局的矩形集合。每个矩形都描述了一条直线。 getExpression 获取给定属性的表达式。 hasChildNodes 返回表明对象是否有子对象的值。 insertAdjacentElement 在指定位置插入元素。 insertAdjacentHTML 在指定位置的元素中插入给定的 HTML 文本。 insertAdjacentText 在指定位置插入给定的文本。 insertBefore 在文档层次中插入元素。 mergeAttributes 复制所有读/写标签属性到指定元素。 normalize 合并邻接 TextNode 对象以便生成一个常规的文档对象模型。 releaseCapture 释放当前文档中对象的鼠标捕捉。 removeAttribute 删除对象的给定标签属性。 removeAttributeNode 从对象中删除删除 attribute 对象。 removeBehavior 分离元素的行为。 removeChild 从元素上删除子结点。 removeExpression 从指定属性中删除表达式。 removeNode 从文档层次中删除对象。 replaceAdjacentText 替换元素的邻接文本。 replaceChild 用新的子元素替换已有的子元素。 replaceNode 用其它元素替换对象。 scrollIntoView 将对象滚动到可见范围内，将其排列到窗口顶部或底部。 select 突出显示表单元素的输入区域。 setActive 设置对象为当前对象而不将对象置为焦点。 setAttribute 设置指定标签属性的值。 setAttributeNode 设置 attribute 对象为对象的一部分。 setCapture 设置属于当前文档的对象的鼠标捕捉。 setExpression 设置指定对象的表达式。 swapNode 交换文档层次中两个对象的位置。","categories":[{"name":"html","slug":"html","permalink":"http://wushuning.com/categories/html/"}],"tags":[{"name":"html","slug":"html","permalink":"http://wushuning.com/tags/html/"}]},{"title":"ajax实现用户注册","slug":"ajax实现用户注册","date":"2013-01-04T16:00:00.000Z","updated":"2018-10-30T06:33:47.354Z","comments":true,"path":"2013/01/05/ajax实现用户注册/","link":"","permalink":"http://wushuning.com/2013/01/05/ajax实现用户注册/","excerpt":"","text":"regist.jsp 文件：一个简单的注册页面1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253&lt;%@ page contentType=\"text/html; charset=gb2312\"%&gt;&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\"&gt;&lt;title&gt;注册页面&lt;/title&gt; &lt;script type=\"text/javascript\" src=\"http://www.knowsky.com/js/ajax.js\"&gt; &lt;/script&gt;&lt;script type=text/javascript&gt;&lt;!-- function myAlert(strTitle) &#123; var message=document.getElementById(\"myDiv\").innerHTML; var win1 = new Zapatec.AlertWindow(message, &#123;title:strTitle, modal:true, width : 580,height:330&#125;); &#125; function doCheck() &#123; var f = document.forms[0]; if(f.username.value!=\"\") &#123; document.getElementById(\"feedback_info\").innerHTML = \"系统正在处理您的请求，请稍后。\"; send_request(\"GET\",\"checkUsername.jsp?username=\"+f.username.value,null,\"text\",showFeedbackInfo); &#125; else &#123; document.getElementById(\"feedback_info\").innerHTML = \"请输入用户名称。\"; &#125;&#125;function showFeedbackInfo() &#123; if (http_request.readyState == 4) &#123; // 判断对象状态 if (http_request.status == 200) &#123; // 信息已经成功返回，开始处理信息 document.getElementById(\"feedback_info\").innerHTML = http_request.responseText; &#125; else &#123; //页面不正常 alert(\"您所请求的页面有异常。\"); &#125; &#125;&#125;//--&gt; &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;form name=\"form1\" method=\"post\" action=\"\"&gt;&lt;table style=\"font-size:12px;\"&gt; &lt;tr&gt; &lt;td width=\"80\"&gt;用户名：&lt;/td&gt; &lt;td&gt;&lt;input type=\"text\" name=\"username\" onblur=\"doCheck()\"&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=\"2\"&gt;&lt;span id=\"feedback_info\" style=\"color:#FF0000\"&gt;&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;一级密码：&lt;/td&gt; &lt;td&gt;&lt;input type=\"password\" name=\"pwd\"&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; js文件源代码如下：（ajax.js）12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273//定义XMLHttpRequest对象实例var http_request = false;//定义可复用的http请求发送函数function send_request(method,url,content,responseType,callback) &#123;//初始化、指定处理函数、发送请求的函数 http_request = false; //开始初始化XMLHttpRequest对象 if(window.XMLHttpRequest) &#123; //Mozilla 浏览器 http_request = new XMLHttpRequest(); if (http_request.overrideMimeType) &#123;//设置MiME类别 http_request.overrideMimeType(\"text/xml\"); &#125; &#125; else if (window.ActiveXObject) &#123; // IE浏览器 try &#123; http_request = new ActiveXObject(\"Msxml2.XMLHTTP\"); &#125; catch (e) &#123; try &#123; http_request = new ActiveXObject(\"Microsoft.XMLHTTP\"); &#125; catch (e) &#123;&#125; &#125; &#125; if (!http_request) &#123; // 异常，创建对象实例失败 window.alert(\"不能创建XMLHttpRequest对象实例.\"); return false; &#125; if(responseType.toLowerCase()==\"text\") &#123; //http_request.onreadystatechange = processTextResponse; http_request.onreadystatechange = callback; &#125; else if(responseType.toLowerCase()==\"xml\") &#123; //http_request.onreadystatechange = processXMLResponse; http_request.onreadystatechange = callback; &#125; else &#123; window.alert(\"响应类别参数错误。\"); return false; &#125; // 确定发送请求的方式和URL以及是否异步执行下段代码 if(method.toLowerCase()==\"get\") &#123; http_request.open(method, url, true); &#125; else if(method.toLowerCase()==\"post\") &#123; http_request.open(method, url, true); http_request.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\"); &#125; else &#123; window.alert(\"http请求类别参数错误。\"); return false; &#125; http_request.send(content);&#125;// 处理返回文本格式信息的函数function processTextResponse() &#123; if (http_request.readyState == 4) &#123; // 判断对象状态 if (http_request.status == 200) &#123; // 信息已经成功返回，开始处理信息 //alert(http_request.responseText); alert(\"Text文档响应。\"); &#125; else &#123; //页面不正常 alert(\"您所请求的页面有异常。\"); &#125; &#125;&#125;//处理返回的XML格式文档的函数function processXMLResponse() &#123; if (http_request.readyState == 4) &#123; // 判断对象状态 if (http_request.status == 200) &#123; // 信息已经成功返回，开始处理信息 //alert(http_request.responseXML); alert(\"XML文档响应。\"); &#125; else &#123; //页面不正常 alert(\"您所请求的页面有异常。\"); &#125; &#125;&#125; checkUsername.jsp源代码如下：1234567891011&lt;%@ page contentType=\"text/html; charset=gb2312\"%&gt;&lt;%@ page import=\"com.kemei.user.util.MemberManager\" %&gt;&lt;% String name=request.getParameter(\"username\"); MemberManager manager=new MemberManager(); if(manager.searchByUsername(username)) out.println(\"用户名称[\"+username+\"]已经被注册，请更换其他用户名称再注册。\"); else out.println(\"用户名称[\"+username+\"]尚未被注册，您可以继续。\"); manager.closeDAO();%&gt; 到此，一个简单的异步验证用户名的程序已经完成，当你输入完用户名后，切换光标，将会异步验证数据的正确性，但是，在使用时还遇到点不问题，最初输入英文或数字验证用户名时，没问题，但我输入中文难时却出现乱码，于是对checkUsername.jsp进行了修改，修改后源程序如下： 123456789101112&lt;%@ page contentType=\"text/html; charset=gb2312\"%&gt;&lt;%@ page import=\"com.kemei.user.util.MemberManager\" %&gt;&lt;% String name=request.getParameter(\"username\"); String username=new String(name.getBytes(\"ISO8859-1\"),\"gb2312\"); MemberManager manager=new MemberManager(); if(manager.searchByUsername(username)) out.println(\"用户名称[\"+username+\"]已经被注册，请更换其他用户名称再注册。\"); else out.println(\"用户名称[\"+username+\"]尚未被注册，您可以继续。\"); manager.closeDAO();%&gt;","categories":[{"name":"ajax","slug":"ajax","permalink":"http://wushuning.com/categories/ajax/"}],"tags":[{"name":"ajax","slug":"ajax","permalink":"http://wushuning.com/tags/ajax/"}]},{"title":"oracle-addbatch数组越界错误","slug":"oracle-addbatch数组越界错误","date":"2013-01-02T16:00:00.000Z","updated":"2018-10-30T06:34:06.648Z","comments":true,"path":"2013/01/03/oracle-addbatch数组越界错误/","link":"","permalink":"http://wushuning.com/2013/01/03/oracle-addbatch数组越界错误/","excerpt":"","text":"使用jdbc接口PreparedStatement.executeBatch()向oracle中批量执行sql时候，出现异常123456ArrayIndexOutOfBoundsException，具体信息如下：[java] view plaincopyprint?1.java.lang.ArrayIndexOutOfBoundsException: -32413 2. at oracle.jdbc.driver.OraclePreparedStatement.setupBindBuffers(OraclePreparedStatement.java:2672) 3. atoracle.jdbc.driver.OraclePreparedStatement.executeBatch(OraclePreparedStatement.java:10688) 4. atcom.keyi.xxx.dal.xx.importFile(PublicCustomerImportDao.java:107) 看样子是oralcejdbc驱动内部setupBindBuffers方法中出现了数组越界异常，但是是什么原因导致的此异常出现，一直没有搞清楚。在网上找到一个帖子，通过他的思路得到了解决方案。 帖子内容如下：1The 10g driver apparently keeps a global serialnumber for all parameters in the entire batch, with a &quot;short&quot;variable. So you can have at most 32768 parameters in the batch. I was havingthe same exception because I have a INSERT statement with 42 parameters and mybatches can be as big as 1000 records, so 42000 &gt; 32768 and this overflowsto a negative index. I reduced the batch factor to 100 to be safe, and all iswell. I guess your update DML should have a larger number of parameters perrecord, right? (My diagnostic of the bug is just deduction from the symptoms) 大体的意思是，oracle的preparedStatement批量执行sql时，对参数个数是有上限的（针对不同版本的oracle驱动，这个上限对不同的可能是不同的），这个参数个数的含义指addBatch的次数每条sql中的参数个数。对于Oracle 10g的驱动来说，这个值可能是32768，所以编程时，addBatch的次数每条sql中的参数个数应该小于这个值，否则报错。 按照这个思路，将addBatch的数量减少，使每次executeBatch的参数值小于32768，发现异常解决。 文档参考地址 http://blog.csdn.net/yanwushu/article/details/42009811https://community.oracle.com/thread/599441?start=15&amp;tstart=0","categories":[{"name":"oracle","slug":"oracle","permalink":"http://wushuning.com/categories/oracle/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://wushuning.com/tags/mysql/"},{"name":"数据库","slug":"数据库","permalink":"http://wushuning.com/tags/数据库/"}]},{"title":"mysql专杀使mysql无法启动","slug":"mysql专杀使mysql无法启动","date":"2013-01-01T16:00:00.000Z","updated":"2018-10-30T06:34:24.873Z","comments":true,"path":"2013/01/02/mysql专杀使mysql无法启动/","link":"","permalink":"http://wushuning.com/2013/01/02/mysql专杀使mysql无法启动/","excerpt":"","text":"今天发现电脑上有恶意插件. 就下了个360强力木马专杀工具. 最后这玩意居然把我的mysql给咔嚓了..没有启动. 解决方法: 看看服务里面有没有mysql的服务.启动即可. 没有就 启动cmd，切换至mysql安装目录/bin下，执行12mysqld-nt.exe -install net start mysql 解决……","categories":[{"name":"mysql","slug":"mysql","permalink":"http://wushuning.com/categories/mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://wushuning.com/tags/mysql/"},{"name":"数据库","slug":"数据库","permalink":"http://wushuning.com/tags/数据库/"}]},{"title":"javascript遍历指定目录所有文件","slug":"javascript遍历文件和目录","date":"2012-12-31T16:00:00.000Z","updated":"2018-10-30T06:34:41.862Z","comments":true,"path":"2013/01/01/javascript遍历文件和目录/","link":"","permalink":"http://wushuning.com/2013/01/01/javascript遍历文件和目录/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\"&gt;&lt;script&gt;function searchFiles() &#123; var fso = new ActiveXObject(\"Scripting.FileSystemObject\"); var f = fso.GetFolder(document.all.fixfolder.value); var fc = new Enumerator(f.files); var s = \"\"; for (; ! fc.atEnd(); fc.moveNext()) &#123; s += fc.item(); s += \"&lt;br/&gt;\"; &#125; fk = new Enumerator(f.SubFolders); for (; ! fk.atEnd(); fk.moveNext()) &#123; s += fk.item(); s += \"&lt;br/&gt;\"; &#125; textarea.innerHTML = s&#125; &lt;/script&gt;&lt;/head&gt;&lt;body bgcolor=\"#FFFFFF\"&gt; 指定文件夹&lt;input type=\"text\" name=\"fixfolder\" value=\"E:J2EE\"&gt; &lt;input type=\"button\" value=\"搜索\" onclick=\"searchFiles()\"&gt; &lt;table&gt; &lt;tr&gt; &lt;td id=\"textarea\"&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"javascript","slug":"javascript","permalink":"http://wushuning.com/categories/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://wushuning.com/tags/javascript/"}]},{"title":"SQLServer-企业管理器无法打开","slug":"sqlserver企业管理器无法打开","date":"2012-01-19T16:00:00.000Z","updated":"2018-10-30T07:48:33.930Z","comments":true,"path":"2012/01/20/sqlserver企业管理器无法打开/","link":"","permalink":"http://wushuning.com/2012/01/20/sqlserver企业管理器无法打开/","excerpt":"","text":"方法一: 在运行里面输入—c 依次点击控制台–忝加/删除管理单元–忝加–找到Microsoft SQL企业管理器–忝加–关闭–确定 （注：此处点击忝加完后可以关闭了，不要等待响应，如果你多次点击了添加，后来可以看到n多个sql企业管理器）再回到控制台一选项一控制台楼 式选择“用户模式完全访问“—将下面的选择全部取消•最后，从控制台–另存为-存储为c:\\Program Files\\Micr〇S〇ft SQL S erver\\80\\Tools\\BIHH\\SQL Server Enterprise Manager.MSC (即SqlServer的安装目录下的bin文件夹）• 方法二:1regsvr32 C:\\Windows\\system32\\insxinl3.dll","categories":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/categories/SQLServer/"}],"tags":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/tags/SQLServer/"}]},{"title":"SQLServer 导出数据的存储过程","slug":"sqlserver导出数据的存储过程","date":"2012-01-17T16:00:00.000Z","updated":"2018-10-30T07:40:33.201Z","comments":true,"path":"2012/01/18/sqlserver导出数据的存储过程/","link":"","permalink":"http://wushuning.com/2012/01/18/sqlserver导出数据的存储过程/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950declare @objectId int set @objectId=object_id('proc_insert') if @objectId is not null begin drop proc proc_insert end go create proc proc_insert (@tablename varchar(256)) as begin set nocount on declare @sqlstr varchar(4000) declare @sqlstr1 varchar(4000) declare @sqlstr2 varchar(4000) select @sqlstr='select ''insert '+@tablename select @sqlstr1='' select @sqlstr2='(' select @sqlstr1='values (''+' select @sqlstr1=@sqlstr1+col+'+'',''+' ,@sqlstr2=@sqlstr2+name +',' from (select case when a.xtype =173 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar('+convert(varchar(4),a.length*2+2)+'),'+a.name +')'+' end' when a.xtype =104 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar(1),'+a.name +')'+' end' when a.xtype =175 then 'case when '+a.name+' is null then ''NULL'' else '+'''''''''+'+'replace('+a.name+','''''''','''''''''''')' + '+'''''''''+' end' when a.xtype =61 then 'case when '+a.name+' is null then ''NULL'' else '+'''''''''+'+'convert(varchar(23),'+a.name +',121)'+ '+'''''''''+' end' when a.xtype =106 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar('+convert(varchar(4),a.xprec+2)+'),'+a.name +')'+' end' when a.xtype =62 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar(23),'+a.name +',2)'+' end' when a.xtype =56 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar(11),'+a.name +')'+' end' when a.xtype =60 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar(22),'+a.name +')'+' end' when a.xtype =239 then 'case when '+a.name+' is null then ''NULL'' else '+'''''''''+'+'replace('+a.name+','''''''','''''''''''')' + '+'''''''''+' end' when a.xtype =108 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar('+convert(varchar(4),a.xprec+2)+'),'+a.name +')'+' end' when a.xtype =231 then 'case when '+a.name+' is null then ''NULL'' else '+'''''''''+'+'replace('+a.name+','''''''','''''''''''')' + '+'''''''''+' end' when a.xtype =59 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar(23),'+a.name +',2)'+' end' when a.xtype =58 then 'case when '+a.name+' is null then ''NULL'' else '+'''''''''+'+'convert(varchar(23),'+a.name +',121)'+ '+'''''''''+' end' when a.xtype =52 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar(12),'+a.name +')'+' end' when a.xtype =122 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar(22),'+a.name +')'+' end' when a.xtype =48 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar(6),'+a.name +')'+' end' when a.xtype =165 then 'case when '+a.name+' is null then ''NULL'' else '+'convert(varchar('+convert(varchar(4),a.length*2+2)+'),'+a.name +')'+' end' when a.xtype =167 then 'case when '+a.name+' is null then ''NULL'' else '+'''''''''+'+'replace('+a.name+','''''''','''''''''''')' + '+'''''''''+' end' else '''NULL''' end as col,a.colid,a.name from syscolumns a where a.id = object_id(@tablename) and a.xtype &lt;&gt;189 and a.xtype &lt;&gt;34 and a.xtype &lt;&gt;35 and a.xtype &lt;&gt;36 )t order by colid select @sqlstr=@sqlstr+left(@sqlstr2,len(@sqlstr2)-1)+') '+left(@sqlstr1,len(@sqlstr1)-3)+')'' from '+@tablename print @sqlstr exec( @sqlstr) set nocount off end go exec proc_insert 'risk_item'","categories":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/categories/SQLServer/"}],"tags":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/tags/SQLServer/"}]},{"title":"SQLServer-自增标量值更改语句","slug":"sqlserver自增标量值更改语句","date":"2012-01-16T16:00:00.000Z","updated":"2018-10-30T08:14:30.723Z","comments":true,"path":"2012/01/17/sqlserver自增标量值更改语句/","link":"","permalink":"http://wushuning.com/2012/01/17/sqlserver自增标量值更改语句/","excerpt":"","text":"1dbcc checkident('risk_item',reseed,0)","categories":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/categories/SQLServer/"}],"tags":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/tags/SQLServer/"}]},{"title":"sql Server 以前进行的程序安装创建了挂起的文件操作,运行安装程序之前,必须重新启动计算机","slug":"sqlserver以前进行的程序安装创建了挂起的文件操作-运行安装程序之前-必须重新启动计算机","date":"2012-01-15T16:00:00.000Z","updated":"2018-10-30T07:38:03.875Z","comments":true,"path":"2012/01/16/sqlserver以前进行的程序安装创建了挂起的文件操作-运行安装程序之前-必须重新启动计算机/","link":"","permalink":"http://wushuning.com/2012/01/16/sqlserver以前进行的程序安装创建了挂起的文件操作-运行安装程序之前-必须重新启动计算机/","excerpt":"","text":"打开注册表找到1HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager 中找到PendingFileRenameOperations删除","categories":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/categories/SQLServer/"}],"tags":[{"name":"SQLServer","slug":"SQLServer","permalink":"http://wushuning.com/tags/SQLServer/"}]},{"title":"myeclipse-tomcat无法完全部署","slug":"myeclipse-tomcat无法完全部署","date":"2012-01-14T16:00:00.000Z","updated":"2018-10-30T07:32:33.360Z","comments":true,"path":"2012/01/15/myeclipse-tomcat无法完全部署/","link":"","permalink":"http://wushuning.com/2012/01/15/myeclipse-tomcat无法完全部署/","excerpt":"","text":"问题：12item could not be redeployed because it could not be completely removed in the undeployment pitem could not be redeployed because it could not be completely removed in the undeployment phase the most common cause of this problem is attempting to redeploy while the server is running which has locked one or more files to correct the deployment you will need to shop the server and then redeploy the project before restarting the server 我的tomcat也配好了服务也启动的 就是家在项目时候出错 解决的办法就是在Eclipse中把项目中引用的jar文件重新加一遍就行了，基本原因就是以前的jar文件不存在了，但是项目信息中还有，即项目的.classpath文件中还有不存在的jar文件引用。 可以右键点项目名称，选择Properties,选择Java Build Path,选择Libraries,把所有项目中的jar都remove，然后再点”add jars”，把项目中的jar文件都加进来，再次部署就正常了。","categories":[{"name":"eclipse","slug":"eclipse","permalink":"http://wushuning.com/categories/eclipse/"}],"tags":[{"name":"eclipse","slug":"eclipse","permalink":"http://wushuning.com/tags/eclipse/"},{"name":"MyEclipse","slug":"MyEclipse","permalink":"http://wushuning.com/tags/MyEclipse/"}]},{"title":"jsp退出页面处理","slug":"jsp退出页面处理","date":"2012-01-13T16:00:00.000Z","updated":"2018-10-30T07:07:56.261Z","comments":true,"path":"2012/01/14/jsp退出页面处理/","link":"","permalink":"http://wushuning.com/2012/01/14/jsp退出页面处理/","excerpt":"","text":"由于HTTP协议以请求/响应的方式工作，所以客户端退出系统时需要主动往Web服务器发送一个请求，通知Web服务器及时销毁会话，否则Web服务器只会等到会话过期时才会销毁它。 我们用一个quit.jsp来处理用户退出系统的操作，quit.jsp负责注销session，及时释放资源。 ·注销session。 ·关闭浏览器窗口。 其代码如下所示：12345678＜%@ page contentType=\"text/html; charset=GBK\" %＞＜% session.invalidate();%＞＜script language=\"javaScript\" ＞ window.opener = null; window.close();＜/script＞ 其中第3行负责注销session，原先放入session的对象将解绑定，等待垃圾回收以释放资源。对于本例而言，session中有一个名为ses_userBean的userBean对象（它是在switch.jsp中放入session的），调用session.invalidate()后，userBean从session中解绑定，它的valueUnbound()方法会被触发调用，然后再等待垃圾回收。 第5~8行是一段JavaScript脚本程序，负责关闭窗口，如果网页不是通过脚本程序打开的（window.open()），调用window.close()脚本关闭窗口前，必须先将window.opener对象置为null，如第6行所示，否则浏览器会弹出一个确定关闭的对话框，笔者发现这个问题困扰了不少的Web程序员，故特别指出。","categories":[{"name":"jsp","slug":"jsp","permalink":"http://wushuning.com/categories/jsp/"}],"tags":[{"name":"jsp","slug":"jsp","permalink":"http://wushuning.com/tags/jsp/"},{"name":"servlet","slug":"servlet","permalink":"http://wushuning.com/tags/servlet/"}]},{"title":"jsp获取各种路径","slug":"jsp获取各种路径","date":"2012-01-12T16:00:00.000Z","updated":"2018-10-30T07:04:44.025Z","comments":true,"path":"2012/01/13/jsp获取各种路径/","link":"","permalink":"http://wushuning.com/2012/01/13/jsp获取各种路径/","excerpt":"","text":"我的upload.jsp在D:\\tomcat\\webapps\\hr下，在upload.jsp中有如下代码 12345System.out.println(\"The Path1 is \"+request.getContextPath());System.out.println(\"The Path2 is \"+request.getRealPath(request.getRequestURI()));System.out.println(\"The Path3 is \"+new java.io.File(application.getRealPath(request.getRequestURI())).getParent());System.out.println(\"The Path4 is \"+request.getServletPath());System.out.println(\"The Path5 is \"+new java.io.File(request.getRealPath(request.getServletPath())).getParent()); 12345The Path1 is /hrThe Path2 is D:\\tomcat\\webapps\\hr\\hr\\upload.jspThe Path3 is D:\\tomcat\\webapps\\hr\\hrThe Path4 is /upload.jspThe Path5 is D:\\tomcat\\webapps\\hr","categories":[{"name":"jsp","slug":"jsp","permalink":"http://wushuning.com/categories/jsp/"}],"tags":[{"name":"jsp","slug":"jsp","permalink":"http://wushuning.com/tags/jsp/"},{"name":"servlet","slug":"servlet","permalink":"http://wushuning.com/tags/servlet/"}]},{"title":"javascript正则表达式判断身份证号","slug":"javascript正则表达式判断身份证号","date":"2012-01-11T16:00:00.000Z","updated":"2018-10-30T06:58:10.952Z","comments":true,"path":"2012/01/12/javascript正则表达式判断身份证号/","link":"","permalink":"http://wushuning.com/2012/01/12/javascript正则表达式判断身份证号/","excerpt":"","text":"12345678910111213141516171819202122232425262728//判断身份证function isIdCardNo(num) &#123; if (isNaN(num)) &#123;alert(\"输入身份证的不是数字！\"); return false;&#125; var len = num.length; var re; if (len == 15) re = new RegExp(/^(\\d&#123;6&#125;)()?(\\d&#123;2&#125;)(\\d&#123;2&#125;)(\\d&#123;2&#125;)(\\d&#123;3&#125;)$/); else if (len == 18) re = new RegExp(/^(\\d&#123;6&#125;)()?(\\d&#123;4&#125;)(\\d&#123;2&#125;)(\\d&#123;2&#125;)(\\d&#123;3&#125;)(\\d)$/); else &#123;alert(\"身份证输入的数字位数不对！\"); return false;&#125; var a = num.match(re); if (a != null) &#123; if (len==15) &#123; var D = new Date(\"19\"+a[3]+\"/\"+a[4]+\"/\"+a[5]); var B = D.getYear()==a[3]&amp;&amp;(D.getMonth()+1)==a[4]&amp;&amp;D.getDate()==a[5]; &#125; else &#123; var D = new Date(a[3]+\"/\"+a[4]+\"/\"+a[5]); var B = D.getFullYear()==a[3]&amp;&amp;(D.getMonth()+1)==a[4]&amp;&amp;D.getDate()==a[5]; &#125; if (!B) &#123;alert(\"输入的身份证号 \"+ a[0] +\" 里出生日期不对！\"); return false;&#125; &#125; return true; &#125;","categories":[{"name":"javascript","slug":"javascript","permalink":"http://wushuning.com/categories/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://wushuning.com/tags/javascript/"},{"name":"正则表达式","slug":"正则表达式","permalink":"http://wushuning.com/tags/正则表达式/"}]},{"title":"jdk tomcat 环境变量配置","slug":"jdk-tomcat环境变量配置","date":"2012-01-10T16:00:00.000Z","updated":"2018-10-30T06:55:06.390Z","comments":true,"path":"2012/01/11/jdk-tomcat环境变量配置/","link":"","permalink":"http://wushuning.com/2012/01/11/jdk-tomcat环境变量配置/","excerpt":"","text":"JDK配置123JAVA_HOME=D:\\JDK1.5classpath=.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jarpath=;%JAVA_HOME%\\bin Tomcat配置123TOMCAT_HOME=D:\\Tomcatpath=%TOMCAT_HOME%\\binclasspath=%TOMCAT_HOME%\\lib","categories":[{"name":"jdk","slug":"jdk","permalink":"http://wushuning.com/categories/jdk/"}],"tags":[{"name":"jdk","slug":"jdk","permalink":"http://wushuning.com/tags/jdk/"},{"name":"tomcat","slug":"tomcat","permalink":"http://wushuning.com/tags/tomcat/"},{"name":"环境变量","slug":"环境变量","permalink":"http://wushuning.com/tags/环境变量/"}]},{"title":"java连接各种数据库驱动名写法和语句","slug":"java连接各种数据库","date":"2012-01-09T16:00:00.000Z","updated":"2018-10-30T06:53:34.534Z","comments":true,"path":"2012/01/10/java连接各种数据库/","link":"","permalink":"http://wushuning.com/2012/01/10/java连接各种数据库/","excerpt":"","text":"java数据库连接:access 数据库连接:12Class.forName(\"sun.jdbc.odbc.JdbcOdbcDriver\");DriverManager.getConnection(\"jdbc:odbc:[dsn]\"); 注:dsn为数据源 MySQL 数据库连接:12Class.forName(\"com.mysql.jdbc.Driver\");DriverManager.getConnection(\"jdbc:mysql://localhost/[DataBase name]?user=root&amp;passWord=yuyang\") Oracle(thin)数据库连接:12Class.forName(\"oracle.jdbc.driver.OracleDriver\");DriverManager.getConnection(\"jdbc:oracle:thin:@localhost:1521:[DataBase Name]\",\"scott\",\"tiger\"); 本机专用:1con=DriverManager.getConnection(\"jdbc:oracle:thin:@localhost:1521:orcl\",\"scott\",\"tiger\"); Oracle(OCI driver)数据库连接:12Class.forName(\"oracle.jdbc.driver.OracleDriver\");DriverManager.getConnection(\"jdbc:oracle:oci8:@localhost:1521:[DataBase Name]\",\"scott\",\"tiger\"); Microsoft SQL Server 2005数据库连接:121.Class.forName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");2.DriverManager.getConnection(\"jdbc:sqlserver://localhost:1433;database=MySchool;user=sa;password=yuyang\"); 注:如果电脑中安装Dr.COM 宽带登录客户端软件，且处于运行状态，则连接数据库读取数据库时将会出现如下异常1Unrecognized Windows Sockets error: 997: recv failed 如果想运行，必须先把Dr.COM这个软件停掉方可 Microsoft SQL Server 2000一.Microsoft SQL Server:123Class.forName(\"com.microsoft.jdbc.sqlserver.SQLServerDriver\");DriverManager.getConnection(\"jdbc:microsoft:sqlserver://localhost:1433;databasename=MySchool\",\"sa\",\"yuyang\"); 二.Microsoft SQL Server(jTDS driver):123Class.forName(\"net.sourceforge.jtds.jdbc.Driver\")DriverManager.getConnection(\"jdbc:jtds:sqlserver://localhost:1433/MySchool\",\"sa\",\"yuyang\");","categories":[{"name":"java","slug":"java","permalink":"http://wushuning.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://wushuning.com/tags/java/"}]},{"title":"设置Tomcat不用输入端口号和目录名就可以访问","slug":"设置Tomcat不用输入端口号和目录名就可以访问","date":"2011-12-31T16:00:00.000Z","updated":"2018-10-18T15:04:05.775Z","comments":true,"path":"2012/01/01/设置Tomcat不用输入端口号和目录名就可以访问/","link":"","permalink":"http://wushuning.com/2012/01/01/设置Tomcat不用输入端口号和目录名就可以访问/","excerpt":"","text":"情况一如果你的TOMCAT所在的机器纯粹就是只装TOMCAT作为JSP的服务器，那么将server.xml文件里的默认端口号由8080改为80即可。此时不用输入端口号也能正确访问，而且地址栏也不会出现端口号。 情况二如果你的TOMCAT所在机器除了装TOMCAT运行JSP外，还有IIS同时也运行ASP的话，那么这个8080端口屏蔽不了。有文章介绍可以将TOMCAT和IIS结合，可以去掉端口号，但是在这种情况下JSP里的SESSION不能用，跳到下页SESSION值就丢失了。故一个比较不得以的办法就是使用页面跳转。具体做法是:在IIS下建一站点，该站点对应你的网站的域名。该站点下就一个文件index.htm： &lt;script language=vbscript&gt; window.location.href=\"http://xxx.xxx.xxx.xxx:8080\" &lt;/script&gt; 则别人在访问你的域名时就不用输入端口号。而由系统自己跳转到TOMCAT。但此刻在地址栏会出现8080，但也只好如此了。","categories":[{"name":"tomcat","slug":"tomcat","permalink":"http://wushuning.com/categories/tomcat/"}],"tags":[{"name":"tomcat","slug":"tomcat","permalink":"http://wushuning.com/tags/tomcat/"}]}]}